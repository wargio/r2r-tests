{
    "type": "cmd",
    "tests": [{
        "name": "rop search with maxhits",
        "file": "bins/elf/varsub",
        "args": "-n",
        "commands": ["e search.maxhits=1", "/Rl pop r15", ""],
        "expected": "0x0000052c: pop r12; pop r13; pop r14; pop r15; ret;\n",
        "broken": false
    }, {
        "name": "rop search without maxhits",
        "file": "bins/elf/varsub",
        "args": "",
        "commands": ["/Rl pop r15~?", ""],
        "expected": "4\n",
        "broken": false
    }, {
        "name": "rop search without maxhits",
        "file": "bins/elf/varsub",
        "args": "",
        "commands": ["e search.maxhits=2", "/Rl pop r15~?", ""],
        "expected": "2\n",
        "broken": false
    }, {
        "name": "search all rop gadgets",
        "file": "bins/elf/analysis/x86-helloworld-phdr",
        "args": "-n",
        "commands": ["e asm.nbytes=8", "e asm.bits=32", "/R", "", ""],
        "expected": "  0x000000b4               cd80  int 0x80\n  0x000000b6         b801000000  mov eax, 1\n  0x000000bb         b900000000  mov ecx, 0\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b5     80b801000000b9  cmp byte [eax + 1], 0xb9\n  0x000000bc               0000  add byte [eax], al\n  0x000000be               0000  add byte [eax], al\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b7               0100  add dword [eax], eax\n  0x000000b9               0000  add byte [eax], al\n  0x000000bb         b900000000  mov ecx, 0\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b8               0000  add byte [eax], al\n  0x000000ba       00b900000000  add byte [ecx], bh\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n\n",
        "broken": false
    }, {
        "name": "search rop gadgets with a regexp",
        "file": "bins/elf/analysis/x86-helloworld-phdr",
        "args": "-n",
        "commands": ["e asm.bits=32", "/R/ mov e[abcd]x", "", ""],
        "expected": "  0x000000b4               cd80  int 0x80\n  0x000000b6         b801000000  mov eax, 1\n  0x000000bb         b900000000  mov ecx, 0\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b7               0100  add dword [eax], eax\n  0x000000b9               0000  add byte [eax], al\n  0x000000bb         b900000000  mov ecx, 0\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n\n",
        "broken": false
    }, {
        "name": "search rop gadgets and show them linearly",
        "file": "bins/elf/analysis/x86-helloworld-phdr",
        "args": "-n",
        "commands": ["e asm.bits=32;/Rl", "", ""],
        "expected": "0x000000b4: int 0x80; mov eax, 1; mov ecx, 0; int 0x80; ret;\n0x000000b5: cmp byte [eax + 1], 0xb9; add byte [eax], al; add byte [eax], al; int 0x80; ret;\n0x000000b7: add dword [eax], eax; add byte [eax], al; mov ecx, 0; int 0x80; ret;\n0x000000b8: add byte [eax], al; add byte [ecx], bh; int 0x80; ret;\n\n",
        "broken": false
    }, {
        "name": "search rop gadgets with filter",
        "file": "bins/elf/analysis/x86-helloworld-phdr",
        "args": "-n",
        "commands": ["e asm.bits=32; /R ecx", "", ""],
        "expected": "  0x000000b4               cd80  int 0x80\n  0x000000b6         b801000000  mov eax, 1\n  0x000000bb         b900000000  mov ecx, 0\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b7               0100  add dword [eax], eax\n  0x000000b9               0000  add byte [eax], al\n  0x000000bb         b900000000  mov ecx, 0\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b8               0000  add byte [eax], al\n  0x000000ba       00b900000000  add byte [ecx], bh\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n\n",
        "broken": false
    }, {
        "name": "search rop gadgets with filter and output JSON",
        "file": "bins/elf/analysis/x86-helloworld-phdr",
        "args": "-n",
        "commands": ["e asm.bits=32; /Rj ecx", ""],
        "expected": "[{\"opcodes\":[{\"offset\":180,\"size\":2,\"opcode\":\"int 0x80\",\"type\":\"swi\"},{\"offset\":182,\"size\":5,\"opcode\":\"mov eax, 1\",\"type\":\"mov\"},{\"offset\":187,\"size\":5,\"opcode\":\"mov ecx, 0\",\"type\":\"mov\"},{\"offset\":192,\"size\":2,\"opcode\":\"int 0x80\",\"type\":\"swi\"},{\"offset\":194,\"size\":1,\"opcode\":\"ret\",\"type\":\"ret\"}],\"retaddr\":194,\"size\":15},{\"opcodes\":[{\"offset\":183,\"size\":2,\"opcode\":\"add dword [eax], eax\",\"type\":\"add\"},{\"offset\":185,\"size\":2,\"opcode\":\"add byte [eax], al\",\"type\":\"add\"},{\"offset\":187,\"size\":5,\"opcode\":\"mov ecx, 0\",\"type\":\"mov\"},{\"offset\":192,\"size\":2,\"opcode\":\"int 0x80\",\"type\":\"swi\"},{\"offset\":194,\"size\":1,\"opcode\":\"ret\",\"type\":\"ret\"}],\"retaddr\":194,\"size\":12},{\"opcodes\":[{\"offset\":184,\"size\":2,\"opcode\":\"add byte [eax], al\",\"type\":\"add\"},{\"offset\":186,\"size\":6,\"opcode\":\"add byte [ecx], bh\",\"type\":\"add\"},{\"offset\":192,\"size\":2,\"opcode\":\"int 0x80\",\"type\":\"swi\"},{\"offset\":194,\"size\":1,\"opcode\":\"ret\",\"type\":\"ret\"}],\"retaddr\":194,\"size\":11}]\n\n\n",
        "broken": false
    }, {
        "name": "search rop gadgets with a regex of the form (a|b)",
        "file": "bins/elf/analysis/x86-helloworld-phdr",
        "args": "-n",
        "commands": ["e asm.bits=32", "\"/R/ (ecx|eax)\"", "", ""],
        "expected": "  0x000000b4               cd80  int 0x80\n  0x000000b6         b801000000  mov eax, 1\n  0x000000bb         b900000000  mov ecx, 0\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b5     80b801000000b9  cmp byte [eax + 1], 0xb9\n  0x000000bc               0000  add byte [eax], al\n  0x000000be               0000  add byte [eax], al\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b7               0100  add dword [eax], eax\n  0x000000b9               0000  add byte [eax], al\n  0x000000bb         b900000000  mov ecx, 0\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n  0x000000b8               0000  add byte [eax], al\n  0x000000ba       00b900000000  add byte [ecx], bh\n  0x000000c0               cd80  int 0x80\n  0x000000c2                 c3  ret\n\n\n",
        "broken": false
    }, {
        "name": "search rop gadgets with another end gadget as part of it.",
        "file": "bins/elf/analysis/unoriginal",
        "args": "",
        "commands": ["e asm.bits=32", "e rop.len=15", "e search.from=0x08048340", "e search.to=0x08048400", "\"/R push esp\"", "", ""],
        "expected": "  0x08048350               fff4  push esp\n  0x08048352               6690  nop\n  0x08048354               6690  nop\n  0x08048356               6690  nop\n  0x08048358               6690  nop\n  0x0804835a               6690  nop\n  0x0804835c               6690  nop\n  0x0804835e               6690  nop\n  0x08048360             8b1c24  mov ebx, dword [esp]\n  0x08048363                 c3  ret\n\n\n",
        "broken": false
    }, {
        "name": "search rop with sequence.",
        "file": "bins/elf/analysis/x86-helloworld-gcc",
        "args": "",
        "commands": ["\"/R push esi;push ebx\"", "", ""],
        "expected": "  0x08048421                 57  push edi\n  0x08048422               31ff  xor edi, edi\n  0x08048424                 56  push esi\n  0x08048425                 53  push ebx\n  0x08048426         e805ffffff  call 0x8048330\n\n\n",
        "broken": false
    }, {
        "name": "search rop with regex sequence.",
        "file": "bins/elf/analysis/x86-helloworld-gcc",
        "args": "",
        "commands": ["e asm.bits=32", "\"/R/ push esi;push ebx\"", "", ""],
        "expected": "  0x08048421                 57  push edi\n  0x08048422               31ff  xor edi, edi\n  0x08048424                 56  push esi\n  0x08048425                 53  push ebx\n  0x08048426         e805ffffff  call 0x8048330\n\n\n",
        "broken": false
    }]
}