{
    "type": "cmd",
    "tests": [{
        "name": "/s begin of file",
        "file": "bins/pe/a.exe",
        "args": "-n",
        "commands": ["s/ MZ", ""],
        "expected": "0x00000000 hit0_0 .MZ.\n",
        "broken": true
    }, {
        "name": "/j escaped",
        "file": "bins/mach0/escaped",
        "args": "",
        "commands": ["", "/j hello", "", ""],
        "expected": "[{\"offset\":8019,\"type\":\"string\",\"data\":\"]c:\\\\hello\\\\worldM\"}]\n",
        "broken": false
    }, {
        "name": "/ search from/to (seek 0)",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "",
        "commands": ["", "e io.va = false", "s 0", "e search.from = 0", "e search.to = 0x00000050", "/ ELF", "", ""],
        "expected": "0x00000001 hit0_0 \"ELF\"\n\n",
        "broken": false
    }, {
        "name": "/ search from/to (seek beyond data)",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "",
        "commands": ["", "e scr.color = false", "e io.va = false", "s 0x1000", "e search.from = 0", "e search.to = 0x50", "/ ELF", "", ""],
        "expected": "0x00000001 hit0_0 \"ELF\"\n\n",
        "broken": false
    }, {
        "name": "/j search",
        "file": "malloc://1024",
        "args": "",
        "commands": ["wx 666f6f005c", "/j foo", ""],
        "expected": "[{\"offset\":0,\"type\":\"string\",\"data\":\"foo\\\\\"}]\n",
        "broken": false
    }, {
        "name": "/! search",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "wx 666f6f00", "/! ff", "", ""],
        "expected": "0x00000000 hit0_0 \"foo\"\n\n",
        "broken": false
    }, {
        "name": "/!x search",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "wx 666f6f00", "/!x 00", "", ""],
        "expected": "0x00000000 hit0_0 66\n\n",
        "broken": false
    }, {
        "name": "// search",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "wx 666f6f00", "/!x 00", "//", "", ""],
        "expected": "0x00000000 hit0_0 66\n0x00000000 hit1_0 66\n\n",
        "broken": false
    }, {
        "name": "// search",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "wx 666f6f00", "/!x 00", "//", "", ""],
        "expected": "0x00000000 hit0_0 66\n0x00000000 hit1_0 66\n\n",
        "broken": false
    }, {
        "name": "/a search",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.bits=32", "\"wa add esp,8;pop ebx; pop ebp; ret\"", "/a add esp, 8", "", ""],
        "expected": "0x00000000 hit0_0 83c408\n\n",
        "broken": false
    }, {
        "name": "/a search from/to (seek 0)",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "-n",
        "commands": ["", "e io.va = false", "s 0", "e search.from = 0", "e search.to = 0x50", "/a xor al, 0x80", "", ""],
        "expected": "0x0000003c hit0_0 3480\n0x00000040 hit0_1 3480\n\n",
        "broken": false
    }, {
        "name": "/a search from/to (seek 0)",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "-n",
        "commands": ["", "e io.va = false", "s 0", "e search.from = 0", "e search.to = 0x50", "# /a xor al, 0x80", "/x 3480", "", ""],
        "expected": "0x0000003c hit0_0 3480\n0x00000040 hit0_1 3480\n\n",
        "broken": false
    }, {
        "name": "/a push esp",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "",
        "commands": ["", "/a push esp", "", ""],
        "expected": "0x08048058 hit0_0 54\n0x0804805c hit0_1 54\n0x08048060 hit0_2 54\n0x08048369 hit0_3 54\n\n",
        "broken": false
    }, {
        "name": "/a search from/to (seek beyond data)",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "",
        "commands": ["", "e io.va = false", "s 0x1000", "e search.from = 0", "e search.to = 0x00000050", "/a xor al, 0x80", "", ""],
        "expected": "0x0000003c hit0_0 3480\n0x00000040 hit0_1 3480\n\n",
        "broken": false
    }, {
        "name": "/x search from/to (seek beyond data)",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "",
        "commands": ["", "e io.va = false", "s 0x1000", "e search.from = 0", "e search.to = 0x00000050", "/x 3480", "", ""],
        "expected": "0x0000003c hit0_0 3480\n0x00000040 hit0_1 3480\n\n",
        "broken": false
    }, {
        "name": "/A search",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.arch = x86", "e anal.arch = x86", "e asm.bits=32", "\"wa add esp,8;pop ebx; pop ebp; ret\"", "/A ret", "", ""],
        "expected": "0x00000005 1 ret\n\n",
        "broken": false
    }, {
        "name": "/A search from/to (seek 0)",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "",
        "commands": ["", "e io.va = false", "s 0", "e search.from = 0", "e search.to = 0x00000050", "/A xor", "", ""],
        "expected": "0x0000003c 2 xor al, 0x80\n0x00000040 2 xor al, 0x80\n\n",
        "broken": false
    }, {
        "name": "/A search from/to (seek beyond data)",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "",
        "commands": ["", "e io.va = false", "s 0x1000", "e search.from = 0", "e search.to = 0x00000050", "/A xor", "", ""],
        "expected": "0x0000003c 2 xor al, 0x80\n0x00000040 2 xor al, 0x80\n\n",
        "broken": false
    }, {
        "name": "Rop search",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.arch = x86", "e anal.arch = x86", "e asm.bits=32", "\"wa add esp,8; pop ebx; pop ebp; ret\"", "e scr.color=false", "/R"],
        "expected": "  0x00000000             83c408  add esp, 8\n  0x00000003                 5b  pop ebx\n  0x00000004                 5d  pop ebp\n  0x00000005                 c3  ret\n\n  0x00000001               c408  les ecx, [eax]\n  0x00000003                 5b  pop ebx\n  0x00000004                 5d  pop ebp\n  0x00000005                 c3  ret\n\n  0x00000002             085b5d  or byte [ebx + 0x5d], bl\n  0x00000005                 c3  ret\n\n\n",
        "broken": false
    }, {
        "name": "Rop search w/ regexp",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.arch = x86", "e anal.arch = x86", "e asm.bits=32", "\"wa add esp,8; pop ebx; pop ebp; ret\"", "e scr.color=false", "/R/ or.*bl"],
        "expected": "  0x00000002             085b5d  or byte [ebx + 0x5d], bl\n  0x00000005                 c3  ret\n\n\n",
        "broken": false
    }, {
        "name": "Rop search w/ branch delay (mips)",
        "file": "malloc://128",
        "args": "",
        "commands": ["e asm.bits=32", "e asm.arch=mips", "e scr.color=false", "wx 1b000000040000001a0000004c08410018000000040000000800000000000070", "/R"],
        "expected": "  0x00000000           1b000000  divu zero, zero, zero\n  0x00000004           04000000  sllv zero, zero, zero\n  0x00000008           1a000000  div zero, zero, zero\n  0x0000000c           4c084100  syscall 0x10421\n\n  0x00000010           18000000  mult zero, zero\n  0x00000014           04000000  sllv zero, zero, zero\n  0x00000018           08000000  jr zero\n  0x0000001c           00000070  madd zero, zero\n\n\n",
        "broken": true
    }, {
        "name": "/c/ search instructions extended regex",
        "file": "bins/pe/standard.exe",
        "args": "",
        "commands": ["e asm.arch = x86", "e anal.arch = x86", "e asm.bits=32", "\"/c/ ror (bh|...), (cl|.)\""],
        "expected": "0x004019d2   # 2: ror esp, cl\n0x004019d5   # 2: ror bh, 1\n0x004019da   # 3: ror ebp, 0xffffffffffffffe5\n",
        "broken": false
    }, {
        "name": "/m search from/to (seek 0)",
        "file": "bins/pe/standard.exe",
        "args": "",
        "commands": ["", "e io.va = false", "s 0", "e search.from = 0", "e search.to = 0x10", "/m", "", ""],
        "expected": "0x00000000 1 PE  for MS Windows Intel 80386 32-bit\n\n",
        "broken": false
    }, {
        "name": "/m search from/to (seek beyond data)",
        "file": "bins/pe/standard.exe",
        "args": "",
        "commands": ["", "e io.va = false", "s 0x1000", "e search.from = 0", "e search.to = 0x10", "/m", "", ""],
        "expected": "0x00000000 1 PE  for MS Windows Intel 80386 32-bit\n\n",
        "broken": false
    }, {
        "name": "/o search offset of instructions backward",
        "file": "malloc://1024",
        "args": "-a x86 -b 32",
        "commands": ["", "wx 909089d89090", "s 4", "/o", "/o 2", "/o 3", "", ""],
        "expected": "0x00000002\n0x00000001\n0x00000000\n\n",
        "broken": false
    }, {
        "name": "/x search from/to (seek 0)",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "s 0", "e search.from = 0", "e search.to = 0x200", "/x 41424344", "", ""],
        "expected": "0x00000100 hit0_0 41424344\n\n",
        "broken": false
    }, {
        "name": "/x search from/to (seek beyond data)",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "s 0x1000", "e search.from = 0", "e search.to = 0x200", "/x 41424344", "", ""],
        "expected": "0x00000100 hit0_0 41424344\n\n",
        "broken": false
    }, {
        "name": "/m search seek",
        "file": "bins/pe/standard.exe",
        "args": "",
        "commands": ["", "e io.va = false", "s 0x1000", "/m~[0]", "s", "/fm", "", ""],
        "expected": "0x00000000\n0x1000\n\n",
        "broken": false
    }, {
        "name": "/mj test json output",
        "file": "bins/elf/analysis/x86-simple",
        "args": "",
        "commands": ["/mj", ""],
        "expected": "[{\"offset\":134512640,\"depth\":1,\"info\":\"ELF 32-bit LSB executable, Intel 80386, version 1\"}]\n",
        "broken": false
    }, {
        "name": "/s search syscall",
        "file": "bins/elf/analysis/x86-simple",
        "args": "",
        "commands": ["", "aeim", "aeip", "/s", "", ""],
        "expected": "0x08048070 exit\n\n",
        "broken": false
    }, {
        "name": "search.from/to for /s",
        "file": "bins/elf/analysis/x86-simple",
        "args": "",
        "commands": ["", "aeim", "aeip", "e search.in = raw", "e search.from = 0x08048060", "e search.to = 0x0804806b", "/s", "", ""],
        "expected": "\n",
        "broken": false
    }, {
        "name": "/v4 search 4 byte",
        "file": "-",
        "args": "",
        "commands": ["", "wx 0x12345678aabbccddeeff12345678", "/v4 0x78563412", "", ""],
        "expected": "0x00000000 hit0_0 12345678\n0x0000000a hit0_1 12345678\n\n",
        "broken": false
    }, {
        "name": "/v4j search 4 byte with json output",
        "file": "-",
        "args": "",
        "commands": ["wx 0x12345678aabbccddeeff12345678", "/v4j 0x78563412", ""],
        "expected": "[{\"offset\":0,\"type\":\"hexpair\",\"data\":\"12345678\"},{\"offset\":10,\"type\":\"hexpair\",\"data\":\"12345678\"}]\n",
        "broken": false
    }, {
        "name": "/v4 search 8 byte",
        "file": "-",
        "args": "",
        "commands": ["", "wx 0x12345678aabbccddeeff12345678", "/v4 0x78563412 0xddccbbaa", "", ""],
        "expected": "0x00000000 hit0_0 12345678aabbccdd\n\n",
        "broken": false
    }, {
        "name": "/V4j search 4 byte with json",
        "file": "-",
        "args": "",
        "commands": ["wx 0x12345678aabbccddeeff12345678", "/V4j 0x78563412 0x78563420", "", ""],
        "expected": "[{\"offset\":0,\"value\":2018915346},{\"offset\":10,\"value\":2018915346}]\n",
        "broken": false
    }, {
        "name": "/x search seek",
        "file": "bins/pe/standard.exe",
        "args": "",
        "commands": ["", "e io.va = false", "s 0x1000", "/x 9090cd80", "s", "", ""],
        "expected": "0x1000\n\n",
        "broken": false
    }, {
        "name": "/x hit in the second map",
        "file": "bins/elf/ioli/crackme0x00",
        "args": "",
        "commands": ["", "/x f8820408", "", ""],
        "expected": "0x08049f2c hit0_0 f8820408\n\n",
        "broken": false
    }, {
        "name": "/x wrong entries",
        "file": "bins/elf/analysis/go_stripped",
        "args": "",
        "commands": ["", "/x 653b2530000000724b53b834e7150883ec188", "", ""],
        "expected": "0x0805ae90 hit0_0 653b2530000000724b53b834e7150883ec\n0x0805b030 hit0_1 653b2530000000724b53b834e7150883ec\n\n",
        "broken": false
    }, {
        "name": "search range hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "b 0x100", "e search.from = 0x50", "e search.to = 0x150", "/x 41424344", "", ""],
        "expected": "0x00000100 hit0_0 41424344\n\n",
        "broken": false
    }, {
        "name": "search range hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "b 0x100", "e search.from = 0x50", "e search.to = 0x90", "/x 41424344", "", ""],
        "expected": "\n",
        "broken": false
    }, {
        "name": "search range hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "b 0x100", "e search.from = 0x100", "e search.to = 0x104", "/x 41424344", "", ""],
        "expected": "0x00000100 hit0_0 41424344\n\n",
        "broken": false
    }, {
        "name": "search range hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "b 0x100", "e search.from = 0x101", "e search.to = 0x104", "/x 41424344", "", ""],
        "expected": "\n",
        "broken": false
    }, {
        "name": "search range hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "b 0x100", "e search.from = 0x100", "e search.to = 0x103", "/x 41424344", "", ""],
        "expected": "\n",
        "broken": false
    }, {
        "name": "search range hex @(A..B)",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "b 0x100", "/x 41424344 @(0x50 0x150)", "", ""],
        "expected": "0x00000100 hit0_0 41424344\n\n",
        "broken": false
    }, {
        "name": "search range hex @(A..B)",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "w ABCD @ 0x100", "b 0x100", "/x 41424344 @(0x50 0x90)", "", ""],
        "expected": "\n",
        "broken": false
    }, {
        "name": "backward search hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["w ABCD @ 0x100", "e search.from = 0x50", "e search.to = 0x150", "b 0x100", "/bx 41424344", ""],
        "expected": "0x00000100 hit0_0 41424344\n\n",
        "broken": false
    }, {
        "name": "backward search hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["w ABCD @ 0x100", "e search.from = 0x110", "e search.to = 0x150", "b 0x100", "/bx 41424344", ""],
        "expected": "\n",
        "broken": false
    }, {
        "name": "backward search hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["w ABCD @ 0x100", "e search.from = 0x100", "e search.to = 0x104", "b 0x100", "/bx 41424344", ""],
        "expected": "0x00000100 hit0_0 41424344\n\n",
        "broken": false
    }, {
        "name": "backward search hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["w ABCD @ 0x100", "e search.from = 0x100", "e search.to = 0x103", "b 0x100", "/bx 41424344", ""],
        "expected": "\n",
        "broken": false
    }, {
        "name": "backward search hex",
        "file": "malloc://1024",
        "args": "",
        "commands": ["w ABCD @ 0x100", "e search.from = 0x101", "e search.to = 0x104", "b 0x100", "/bx 41424344", ""],
        "expected": "\n",
        "broken": false
    }, {
        "name": "/x with bin mask",
        "file": "malloc://1024",
        "args": "",
        "commands": ["wx aaaaaabb", "/x aa..bb", ""],
        "expected": "0x00000001 hit0_0 aaaabb\n\n",
        "broken": false
    }, {
        "name": "/x with bin mask",
        "file": "malloc://1024",
        "args": "",
        "commands": ["wx aaaaaabb", "/x ..aabb", ""],
        "expected": "0x00000001 hit0_0 aaaabb\n\n",
        "broken": false
    }, {
        "name": "search by whole file",
        "file": "malloc://64",
        "args": "",
        "commands": ["wx 90 @ 0x10", "/F bins/other/radiff2/radiff2_c_2", ""],
        "expected": "0x00000010 hit0_0 90\n\n",
        "broken": false
    }, {
        "name": "search by rest of file",
        "file": "-",
        "args": "",
        "commands": ["wx 210a @ 0x10", "/F bins/elf/analysis/hello.raw 48", ""],
        "expected": "0x00000010 hit0_0 210a\n\n",
        "broken": false
    }, {
        "name": "search by rest of file dec/dec",
        "file": "-",
        "args": "",
        "commands": ["wx 0e @ 0x10", "/F bins/elf/analysis/hello.raw 1 1", ""],
        "expected": "0x00000010 hit0_0 0e\n\n",
        "broken": false
    }, {
        "name": "search by part of file dec/hex",
        "file": "-",
        "args": "",
        "commands": ["wx 8048 @ 0x10", "/F bins/elf/analysis/hello.raw 0x1c 0x2", ""],
        "expected": "0x00000010 hit0_0 8048\n\n",
        "broken": false
    }]
}