{
    "type": "cmd",
    "tests": [
        {
            "name": "t.anal/x86/aap",
            "file": "bins/mach0/ls-osx-x86_64",
            "args": "-nn",
            "commands": [
                "aap",
                "pi 2 @ fcn.000010f8",
                "",
                ""
            ],
            "expected": "push rbp\nmov rbp, rsp\n\n",
            "broken": false
        },
        {
            "name": "lab1B",
            "file": "bins/anal/lab1B",
            "args": "",
            "commands": [
                "s 0x08048a8b",
                "af",
                "afb",
                "",
                ""
            ],
            "expected": "0x08048a8b 0x08048a91 00:0000 6 j 0x8048bd5 f 0x08048a91\n0x08048bd5 0x08048be4 00:0000 15\n0x08048a91 0x08048aa0 00:0000 15\n\n",
            "broken": true
        },
        {
            "name": "bug-cjmp",
            "file": "bins/anal/bug-cjmp",
            "args": "",
            "commands": [
                "af",
                "afb",
                "",
                ""
            ],
            "expected": "0x100000f30 0x100000f4c 00:0000 28 j 0x100000f61 f 0x100000f4c\n0x100000f4c 0x100000f61 00:0000 21 j 0x100000f79\n0x100000f61 0x100000f70 00:0000 15\n0x100000f79 0x100000f82 00:0000 9\n\n",
            "broken": true
        },
        {
            "name": "bug-cjmp-ok",
            "file": "bins/anal/bug-cjmp-ok",
            "args": "",
            "commands": [
                "af",
                "afb",
                "",
                ""
            ],
            "expected": "0x100000f30 0x100000f4c 00:0000 28 j 0x100000f61 f 0x100000f4c\n0x100000f4c 0x100000f61 00:0000 21 j 0x100000f79\n0x100000f61 0x100000f79 00:0000 24 j 0x100000f79\n0x100000f79 0x100000f82 00:0000 9\n\n",
            "broken": false
        },
        {
            "name": "x86: fastcall argument analysis",
            "file": "bins/elf/analysis/fast",
            "args": "",
            "commands": [
                "aa ; s sym.fastcaslled ; afc fastcall ; afva ; ?e ; pdf~arg,local"
            ],
            "expected": "|   sym.fastcaslled (int arg2, int arg1, int arg_8h, int arg_ch);\n|           ; var int local_20h @ ebp-0x20\n|           ; var int local_1ch @ ebp-0x1c\n|           ; var int local_10h @ ebp-0x10\n|           ; var int local_ch @ ebp-0xc\n|           ; arg int arg_8h @ ebp+0x8\n|           ; arg int arg_ch @ ebp+0xc\n|           ; arg int arg2 @ edx\n|           ; arg int arg1 @ ecx\n|           0x08048421      894de4         mov dword [local_1ch], ecx  ; arg1\n|           0x08048424      8955e0         mov dword [local_20h], edx  ; arg2\n|           0x08048427      8b55e4         mov edx, dword [local_1ch]\n|           0x0804842a      8b45e0         mov eax, dword [local_20h]\n|           0x0804842f      8945f4         mov dword [local_ch], eax\n|           0x08048432      8b45e0         mov eax, dword [local_20h]\n|           0x08048435      2b450c         sub eax, dword [arg_ch]\n|           0x08048438      8945f0         mov dword [local_10h], eax\n|           0x0804843b      ff7508         push dword [arg_8h]\n|           0x0804843e      ff75f0         push dword [local_10h]\n|           0x08048441      ff75f4         push dword [local_ch]\n\n",
            "broken": false
        },
        {
            "name": "a8 analyze bytes",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=64",
                "e asm.os=linux",
                "a8 55|",
                "",
                ""
            ],
            "expected": "address: 0x0\nopcode: push rbp\nmnemonic: push\nprefix: 0\nid: 588\nbytes: 55\nrefptr: 0\nsize: 1\nsign: false\ntype: upush\ncycles: 2\nesil: rbp,8,rsp,-=,rsp,=[8]\nstack: inc\nfamily: cpu\nstackop: inc\nstackptr: 8\n\n",
            "broken": false
        },
        {
            "name": "adf analysis on an obfuscated executable",
            "file": "bins/pe/cmd_adf_sample0.exe",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=32",
                "e asm.os=linux",
                "e asm.lines.bb=false",
                "e asm.lines.out=false",
                "e asm.bytes=false",
                "e asm.indentspace=0",
                "e asm.jmphints=false",
                "e asm.xrefs=false",
                "e asm.functions=false",
                "e asm.fcncalls=false",
                "e asm.lines.fcn=false",
                "e scr.utf8=false",
                "e anal.afterjmp=false",
                "e anal.calls=false",
                "e anal.cjmpref=false",
                "e anal.jmpabove=true",
                "e anal.jmpref=true",
                "e anal.split=true",
                "aaa",
                "adf @ sym.testObf27.exe_VirtMe",
                ".adf @ sym.testObf27.exe_VirtMe",
                "adf @ 0x00560e67",
                ".adf @ 0x00560e67",
                "pd 4 @ 0x00560e67",
                "",
                ""
            ],
            "expected": "0x00560e67      push esi\n0x00560e68      jmp 0x560e7d\n0x00560e6d hex length=16 delta=0\n0x00560e6d  51e5 d61d 31ea ce05 063b d4d4 1b00 8596  Q...1....;......\n\n0x00560e7d      pop esi\n\n",
            "broken": true
        },
        {
            "name": "af anal.endsize",
            "file": "bins/elf/echo-bin",
            "args": "",
            "commands": [
                "",
                "e anal.endsize=0",
                "aaa",
                "s 0x1144",
                "afi~name",
                "",
                ""
            ],
            "expected": "name: main\n\n",
            "broken": false
        },
        {
            "name": "af anal.endsize",
            "file": "bins/elf/echo-bin",
            "args": "",
            "commands": [
                "",
                "e anal.endsize=1",
                "aaa",
                "s 0x1144",
                "afi~name",
                "",
                ""
            ],
            "expected": "name: main\n\n",
            "broken": true
        },
        {
            "name": "af jmp after ret",
            "file": "malloc://512",
            "args": "",
            "commands": [
                "",
                "e anal.hasnext=0",
                "e asm.arch=x86",
                "e asm.bits=64",
                "wx b8010000004839ca7f26b8ffffffff4839ca7c1c498b4838498b5138b8010000004839ca7f0ab8ffffffff4839ca7d025dc34883c7684883c6685dc3",
                "af",
                "afl~?",
                "",
                ""
            ],
            "expected": "1\n\n",
            "broken": false
        },
        {
            "name": "af jmp after ret",
            "file": "malloc://512",
            "args": "",
            "commands": [
                "",
                "e anal.hasnext=0",
                "e asm.arch=x86",
                "e asm.bits=64",
                "wx b8010000004839ca7f26b8ffffffff4839ca7c1c498b4838498b5138b8010000004839ca7f0ab8ffffffff4839ca7d025dc34883c7684883c6685dc3",
                "af",
                "afl~?",
                "afl~[2]",
                "",
                ""
            ],
            "expected": "1\n60\n\n",
            "broken": false
        },
        {
            "name": "af 8 bbs 4 ret and some jumps",
            "file": "malloc://512",
            "args": "",
            "commands": [
                "",
                "e anal.hasnext=0",
                "e asm.arch=x86",
                "e asm.bits=32",
                "wx 85c0740585c07405c385c0eb01c385c07401c3b8efbeaddec3",
                "af",
                "afb",
                "",
                ""
            ],
            "expected": "0x00000000 0x00000004 00:0000 4 j 0x00000009 f 0x00000004\n0x00000004 0x00000008 00:0000 4 j 0x0000000d f 0x00000008\n0x00000008 0x00000009 00:0000 1\n0x00000009 0x0000000d 00:0000 4 j 0x0000000e\n0x0000000d 0x0000000e 00:0000 1\n0x0000000e 0x00000012 00:0000 4 j 0x00000013 f 0x00000012\n0x00000012 0x00000013 00:0000 1\n0x00000013 0x00000019 00:0000 6\n\n",
            "broken": false
        },
        {
            "name": "af 3bbs with entry in the middle of the function",
            "file": "malloc://512",
            "args": "",
            "commands": [
                "",
                "e anal.hasnext=0",
                "e asm.arch=x86",
                "e asm.bits=32",
                "wx 31c031c983c10183c10285c975f231c931c040c3",
                "s 0xa",
                "af",
                "afb",
                "",
                ""
            ],
            "expected": "0x00000000 0x0000000a 00:0000 10 j 0x0000000a\n0x0000000a 0x0000000e 00:0000 4 j 0x00000000 f 0x0000000e\n0x0000000e 0x00000014 00:0000 6\n\n",
            "broken": false
        },
        {
            "name": "af 6 bbs with entry at the end of the function",
            "file": "malloc://512",
            "args": "",
            "commands": [
                "",
                "e anal.hasnext=0",
                "e asm.arch=x86",
                "e asm.bits=32",
                "wx 31c083c00183e801750831c083e80183c00131c983c10183e90175e431d283ea0183c2017402ebd831c0c3",
                "s 0x26",
                "af",
                "afb",
                "",
                ""
            ],
            "expected": "0x00000000 0x0000000a 00:0000 10 j 0x00000012 f 0x0000000a\n0x0000000a 0x00000012 00:0000 8 j 0x00000012\n0x00000012 0x0000001c 00:0000 10 j 0x00000000 f 0x0000001c\n0x0000001c 0x00000026 00:0000 10 j 0x00000028 f 0x00000026\n0x00000026 0x00000028 00:0000 2 j 0x00000000\n0x00000028 0x0000002b 00:0000 3\n\n",
            "broken": false
        },
        {
            "name": "af+afl on pe/test",
            "file": "bins/pe/test.exe",
            "args": "",
            "commands": [
                "s 0x401000",
                "af",
                "afl",
                "",
                "",
                ""
            ],
            "expected": "0x00401000    1 59           main\n0x0040103b    3 15   -\u003e 277  fcn.0040103b\n0x0040104a    4 109          fcn.0040104a\n0x004010c7    1 29           fcn.004010c7\n0x004010e4    4 148          fcn.004010e4\n0x00401335    3 262          loc.00401335\n0x00404ad7    1 8            fcn.00404ad7\n\n",
            "broken": false
        },
        {
            "name": "anal.fcnprefix",
            "file": "bins/pe/test.exe",
            "args": "",
            "commands": [
                "s 0x401000",
                "e anal.fcnprefix=root",
                "af",
                "afl",
                "",
                "",
                ""
            ],
            "expected": "0x00401000    1 59           main\n0x0040103b    3 15   -\u003e 277  root.0040103b\n0x0040104a    4 109          root.0040104a\n0x004010c7    1 29           root.004010c7\n0x004010e4    4 148          root.004010e4\n0x00401335    3 262          loc.00401335\n0x00404ad7    1 8            root.00404ad7\n\n",
            "broken": false
        },
        {
            "name": "syscall emu",
            "file": "bins/elf/analysis/hello.raw",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=32",
                "e asm.os=linux",
                "e asm.emu=true",
                "e asm.bytes=0",
                "e asm.cmt.col=20",
                "e asm.lines.bb=false",
                "pd 20~write,exit",
                "",
                ""
            ],
            "expected": "  0x00000014      int 0x80 ; 4 = write (1, \"Hello, world!.\", 14)\n  0x0000001b      int 0x80 ; 1 = exit (1)\n\n",
            "broken": false
        },
        {
            "name": "Windows Function EMU printf",
            "file": "bins/pe/standard.exe",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=32",
                "e asm.os=windows",
                "e asm.emu=true",
                "e emu.write=true",
                "e asm.bytes=0",
                "e asm.cmt.col=20",
                "e asm.lines.bb=false",
                "aeim",
                "s 0x00402ade",
                "pd 4~printf",
                "",
                ""
            ],
            "expected": "  0x00402ae8      call dword [sym.imp.msvcrt.dll_printf] ; 0x402d48 ; esp=0x177ff8 ; eip=0x2d08 reloc.msvcrt.dll_printf\n                      ; int printf(const char * format : (*0x402bd2)0x00177ffc =   - RT_MANIFEST resource located.)\n\n",
            "broken": false
        },
        {
            "name": "Windows Function EMU LoadStringA",
            "file": "bins/pe/standard.exe",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=32",
                "e asm.os=windows",
                "e asm.emu=true",
                "e emu.write=true",
                "e asm.bytes=0",
                "e asm.cmt.col=20",
                "e asm.lines.bb=false",
                "e io.cache=true",
                "aeim",
                "s 0x00402aee",
                "pd 10~LoadString",
                "",
                ""
            ],
            "expected": "  0x00402b00      call dword [sym.imp.user32.dll_LoadStringA] ; 0x402d40 ; esp=0x177ff0 ; eip=0x2cfa reloc.user32.dll_LoadStringA\n                      ; long LoadStringA(HINSTANCE hInstance : (*0x0) NULL, UINT uID : (*0x96)0x00177ff8 = 0xffffffff, LPSTR lpBuffer : (*0x402bfd)0x00177ffc = 0x00177ffc -\u003e 0x00000000, int nBufferMax : (*0x1f)0x00178000 = 4294967295)\n\n",
            "broken": false
        },
        {
            "name": "Linux fcnsign test",
            "file": "bins/elf/analysis/ls-linux64",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=64",
                "e asm.os=linux",
                "e asm.emu=true",
                "e emu.write=true",
                "e asm.bytes=0",
                "e asm.cmt.col=20",
                "e asm.lines.bb=false",
                "e asm.lines.fcn=false",
                "aa",
                "aeim",
                "s 0x00003cb8-0x30",
                "pd 20~env",
                "",
                ""
            ],
            "expected": "0x00003cb8      call sym.imp.getenv ; rsp=0x177fe8 -\u003e 0x464c457f ; rip=0x3430 -\u003e 0x97fa25ff\n                    ; char *getenv(const char * name : 0x00015a71 = COLUMNS)\n\n",
            "broken": false
        },
        {
            "name": "af- bug",
            "file": "-",
            "args": "",
            "commands": [
                "af+ $$ foo; af- $$;afl~?",
                ""
            ],
            "expected": "0\n\n",
            "broken": false
        },
        {
            "name": "anal.recont=true",
            "file": "bins/pe/bcc1.ex",
            "args": "",
            "commands": [
                "e anal.recont=true",
                "af",
                "afb",
                "afb @ 0x401012",
                "afb @ 0x40dfd0",
                "",
                ""
            ],
            "expected": "0x00401000 0x00401002 00:0000 2\n0x00401012 0x00401059 00:0000 71\n0x0040dfd0 0x0040e075 00:0000 165 j 0x0040e0af f 0x0040e075\n0x0040e075 0x0040e094 00:0000 31 j 0x0040e0a8\n0x0040e094 0x0040e0a8 00:0000 20 j 0x0040e0a8\n0x0040e0a8 0x0040e0af 00:0000 7 j 0x0040e094 f 0x0040e0af\n0x0040e0af 0x0040e0c4 00:0000 21 j 0x0040e12b f 0x0040e0c4\n0x0040e0c4 0x0040e0cc 00:0000 8 j 0x0040e0cd\n0x0040e0cc 0x0040e0cd 00:0000 1 j 0x0040e0cd\n0x0040e0cd 0x0040e0d3 00:0000 6 j 0x0040e0cc f 0x0040e0d3\n0x0040e0d3 0x0040e0d7 00:0000 4 j 0x0040e0cc f 0x0040e0d7\n0x0040e0d7 0x0040e0dc 00:0000 5 j 0x0040e0e1 f 0x0040e0dc\n0x0040e0dc 0x0040e0e1 00:0000 5 j 0x0040e0e6\n0x0040e0e1 0x0040e0e5 00:0000 4 j 0x0040e0e6\n0x0040e0e5 0x0040e0e6 00:0000 1 j 0x0040e0e6\n0x0040e0e6 0x0040e0ec 00:0000 6 j 0x0040e0f4 f 0x0040e0ec\n0x0040e0ec 0x0040e0f0 00:0000 4 j 0x0040e0f4 f 0x0040e0f0\n0x0040e0f0 0x0040e0f4 00:0000 4 j 0x0040e0e5 f 0x0040e0f4\n0x0040e0f4 0x0040e0f9 00:0000 5 j 0x0040e0fd f 0x0040e0f9\n0x0040e0f9 0x0040e0fc 00:0000 3 j 0x0040e0fd\n0x0040e0fc 0x0040e0fd 00:0000 1 j 0x0040e0fd\n0x0040e0fd 0x0040e103 00:0000 6 j 0x0040e107 f 0x0040e103\n0x0040e103 0x0040e107 00:0000 4 j 0x0040e0fc f 0x0040e107\n0x0040e107 0x0040e10b 00:0000 4 j 0x0040e0fc f 0x0040e10b\n0x0040e10b 0x0040e12b 00:0000 32 j 0x0040e14c\n0x0040e12b 0x0040e14c 00:0000 33 j 0x0040e14c\n0x0040e14c 0x0040e153 00:0000 7\n\n",
            "broken": false
        },
        {
            "name": "afb twice",
            "file": "bins/pe/bcc1.ex",
            "args": "",
            "commands": [
                "e anal.recont=true",
                "e anal.depth=100",
                "e anal.hasnext=true",
                "af @ 0x40dfd0",
                "af;afb;afb @ 0x40dfd0",
                "",
                ""
            ],
            "expected": "0x00401000 0x00401002 00:0000 2 j 0x00401012\n0x00401012 0x00401059 00:0000 71 j 0x0040dfd0\n0x0040dfd0 0x0040e075 00:0000 165 j 0x0040e0af f 0x0040e075\n0x0040e075 0x0040e094 00:0000 31 j 0x0040e0a8\n0x0040e094 0x0040e0a8 00:0000 20 j 0x0040e0a8\n0x0040e0a8 0x0040e0af 00:0000 7 j 0x0040e094 f 0x0040e0af\n0x0040e0af 0x0040e0c4 00:0000 21 j 0x0040e12b f 0x0040e0c4\n0x0040e0c4 0x0040e0cc 00:0000 8 j 0x0040e0cd\n0x0040e0cc 0x0040e0cd 00:0000 1 j 0x0040e0cd\n0x0040e0cd 0x0040e0d3 00:0000 6 j 0x0040e0cc f 0x0040e0d3\n0x0040e0d3 0x0040e0d7 00:0000 4 j 0x0040e0cc f 0x0040e0d7\n0x0040e0d7 0x0040e0dc 00:0000 5 j 0x0040e0e1 f 0x0040e0dc\n0x0040e0dc 0x0040e0e1 00:0000 5 j 0x0040e0e6\n0x0040e0e1 0x0040e0e5 00:0000 4 j 0x0040e0e6\n0x0040e0e5 0x0040e0e6 00:0000 1 j 0x0040e0e6\n0x0040e0e6 0x0040e0ec 00:0000 6 j 0x0040e0f4 f 0x0040e0ec\n0x0040e0ec 0x0040e0f0 00:0000 4 j 0x0040e0f4 f 0x0040e0f0\n0x0040e0f0 0x0040e0f4 00:0000 4 j 0x0040e0e5 f 0x0040e0f4\n0x0040e0f4 0x0040e0f9 00:0000 5 j 0x0040e0fd f 0x0040e0f9\n0x0040e0f9 0x0040e0fc 00:0000 3 j 0x0040e0fd\n0x0040e0fc 0x0040e0fd 00:0000 1 j 0x0040e0fd\n0x0040e0fd 0x0040e103 00:0000 6 j 0x0040e107 f 0x0040e103\n0x0040e103 0x0040e107 00:0000 4 j 0x0040e0fc f 0x0040e107\n0x0040e107 0x0040e10b 00:0000 4 j 0x0040e0fc f 0x0040e10b\n0x0040e10b 0x0040e12b 00:0000 32 j 0x0040e14c\n0x0040e12b 0x0040e14c 00:0000 33 j 0x0040e14c\n0x0040e14c 0x0040e153 00:0000 7\n\n",
            "broken": false
        },
        {
            "name": "./followbrokenfcnsrefs",
            "file": "bins/pe/bdc1.ex",
            "args": "",
            "commands": [
                "e anal.brokenrefs=true",
                "af",
                "s 0x4068e8",
                "fd",
                "s 0x45a708",
                "fd",
                "s 0x45a720",
                "fd",
                "s 0x45a7a0",
                "fd",
                "s 0x4043d8",
                "fd",
                "",
                "",
                ""
            ],
            "expected": "fcn.004068e8\nfcn.0045a708\nfcn.0045a720\nfcn.0045a7a0\nfcn.004043d8\n\n",
            "broken": false
        },
        {
            "name": "function address from operand",
            "file": "bins/pe/test.exe",
            "args": "",
            "commands": [
                "e anal.datarefs=true",
                "s 0x401820",
                "af",
                "s 0x401880",
                "fd",
                "",
                "",
                ""
            ],
            "expected": "fcn.00401880\n\n",
            "broken": false
        },
        {
            "name": "function address from data structure",
            "file": "bins/pe/test.exe",
            "args": "",
            "commands": [
                "e anal.datarefs=true",
                "e anal.recont=true",
                "s 0x4039ba",
                "af",
                "s 0x401441",
                "fd",
                "",
                "",
                ""
            ],
            "expected": "fcn.00401441\n\n",
            "broken": false
        },
        {
            "name": "x86-64 after unknown jmp",
            "file": "bins/elf/analysis/ls-linux64",
            "args": "",
            "commands": [
                "",
                "# e anal.afterjmp=true",
                "s 0x5c50",
                "af",
                "pif",
                "",
                ""
            ],
            "expected": "lea rdi, [rip + 0x217631]\nlea rax, [rip + 0x217631]\npush rbp\nsub rax, rdi\nmov rbp, rsp\ncmp rax, 0xe\njbe 0x5c80\nmov rax, qword [rip + 0x217316]\ntest rax, rax\nje 0x5c80\npop rbp\njmp rax\nnop word [rax + rax]\npop rbp\nret\n\n",
            "broken": false
        },
        {
            "name": "ensure jump within a function is added to the basic block",
            "file": "bins/elf/echo",
            "args": "",
            "commands": [
                "aaa",
                "s 0xf34",
                "afb.",
                "",
                "",
                ""
            ],
            "expected": "0x00000f34 0x00000f4b 00:0000 23 j 0x00001144\n\n",
            "broken": true
        },
        {
            "name": "Main in disassembly",
            "file": "bins/elf/analysis/ls2",
            "args": "",
            "commands": [
                "",
                "aa",
                "pi 1 @ 0x0040488d",
                "",
                ""
            ],
            "expected": "mov rdi, main\n\n",
            "broken": false
        },
        {
            "name": "Main in disassembly",
            "file": "bins/elf/analysis/ls_main_bug",
            "args": "",
            "commands": [
                "aa",
                "afi @ main ~offset",
                "",
                ""
            ],
            "expected": "offset: 0x000038b0\n\n",
            "broken": false
        },
        {
            "name": "calc switch table",
            "file": "bins/elf/calc.file",
            "args": "",
            "commands": [
                "af@0x8049203",
                "f~?switch",
                ""
            ],
            "expected": "7\n\n",
            "broken": false
        },
        {
            "name": "mac-ls switch count",
            "file": "bins/mach0/mac-ls",
            "args": "",
            "commands": [
                "aaa",
                "f~?switch",
                ""
            ],
            "expected": "2\n\n",
            "broken": false
        },
        {
            "name": "mac-ls main switch",
            "file": "bins/mach0/mac-ls",
            "args": "",
            "commands": [
                "s main;af",
                "f~switch",
                "f~?case",
                "",
                ""
            ],
            "expected": "0x1000011b5 1 switch.0x1000011b5\n73\n\n",
            "broken": false
        },
        {
            "name": "mac-ls switch count",
            "file": "bins/mach0/mac-ls",
            "args": "",
            "commands": [
                "aaa",
                "f~?case",
                ""
            ],
            "expected": "83\n\n",
            "broken": false
        },
        {
            "name": "mac-ls switch count",
            "file": "bins/pe/test.exe",
            "args": "",
            "commands": [
                "e anal.jmptbl=true",
                "s 0x402cb6",
                "af",
                "afb",
                "",
                "",
                ""
            ],
            "expected": "0x00402cb6 0x00402d2c 00:0000 118 j 0x00402d57 f 0x00402d2c\n0x00402d2c 0x00402d45 00:0000 25 j 0x00402d4f f 0x00402d45\n0x00402d45 0x00402d4f 00:0000 10 j 0x00402d4f\n0x00402d4f 0x00402d57 00:0000 8 j 0x0040388e\n0x00402d57 0x00402d5d 00:0000 6 j 0x00402dbb f 0x00402d5d\n0x00402d5d 0x00402d6e 00:0000 17 j 0x00402d89 f 0x00402d6e\n0x00402d6e 0x00402d73 00:0000 5 j 0x00402d89 f 0x00402d73\n0x00402d73 0x00402d89 00:0000 22 j 0x00402d8b\n0x00402d89 0x00402d8b 00:0000 2 j 0x00402d8b\n0x00402d8b 0x00402d91 00:0000 6 j 0x00402d2c f 0x00402d91\n0x00402d91 0x00402d96 00:0000 5 j 0x00402daf f 0x00402d96\n0x00402d96 0x00402d9b 00:0000 5 j 0x00402daf f 0x00402d9b\n0x00402d9b 0x00402daf 00:0000 20 j 0x00402db1\n0x00402daf 0x00402db1 00:0000 2 j 0x00402db1\n0x00402db1 0x00402dbb 00:0000 10 j 0x00402d2c f 0x00402dbb\n0x00402dbb 0x00402dc5 00:0000 10 j 0x00402d2c f 0x00402dc5\n0x00402dc5 0x00402de7 00:0000 34 j 0x00403875 f 0x00402de7\n0x00402de7 0x00402dfc 00:0000 21 j 0x00403875 f 0x00402dfc\n0x00402dfc 0x00402e03 00:0000 7 j 0x00402e12 f 0x00402e03\n0x00402e03 0x00402e12 00:0000 15 j 0x00402e14\n0x00402e12 0x00402e14 00:0000 2 j 0x00402e14\n0x00402e14 0x00402e30 00:0000 28 j 0x00403850 f 0x00402e30\n0x00402e30 0x00402e37 00:0000 7\n0x00402e37 0x00402e67 00:0000 48 j 0x00403850\n0x00402e67 0x00402e6f 00:0000 8 j 0x00402eb9 f 0x00402e6f\n0x00402e6f 0x00402e74 00:0000 5 j 0x00402eaa f 0x00402e74\n0x00402e74 0x00402e79 00:0000 5 j 0x00402e9e f 0x00402e79\n0x00402e79 0x00402e7d 00:0000 4 j 0x00402e92 f 0x00402e7d\n0x00402e7d 0x00402e86 00:0000 9 j 0x00403850 f 0x00402e86\n0x00402e86 0x00402e92 00:0000 12 j 0x00403850\n0x00402e92 0x00402e9e 00:0000 12 j 0x00403850\n0x00402e9e 0x00402eaa 00:0000 12 j 0x00403850\n0x00402eaa 0x00402eb9 00:0000 15 j 0x00403850\n0x00402eb9 0x00402ec5 00:0000 12 j 0x00403850\n0x00402ec5 0x00402eca 00:0000 5 j 0x00402ef6 f 0x00402eca\n0x00402eca 0x00402ee4 00:0000 26 j 0x00403850 f 0x00402ee4\n0x00402ee4 0x00402ef6 00:0000 18 j 0x00403850\n0x00402ef6 0x00402f11 00:0000 27 j 0x00403850\n0x00402f11 0x00402f1c 00:0000 11 j 0x00403850\n0x00402f1c 0x00402f21 00:0000 5 j 0x00402f47 f 0x00402f21\n0x00402f21 0x00402f3b 00:0000 26 j 0x00403850 f 0x00402f3b\n0x00402f3b 0x00402f47 00:0000 12 j 0x00403850\n0x00402f47 0x00402f62 00:0000 27 j 0x00403850\n0x00402f62 0x00402f67 00:0000 5 j 0x00402fbc f 0x00402f67\n0x00402f67 0x00402f6c 00:0000 5 j 0x00402fb0 f 0x00402f6c\n0x00402f6c 0x00402f71 00:0000 5 j 0x00402f89 f 0x00402f71\n0x00402f71 0x00402f7a 00:0000 9 j 0x00403850 f 0x00402f7a\n0x00402f7a 0x00402f89 00:0000 15 j 0x00403850\n0x00402f89 0x00402f8e 00:0000 5 j 0x00402fa4 f 0x00402f8e\n0x00402f8e 0x00402fa4 00:0000 22 j 0x00403850\n0x00402fa4 0x00402fb0 00:0000 12 j 0x00403850\n0x00402fb0 0x00402fbc 00:0000 12 j 0x00403850\n0x00402fbc 0x00402fc2 00:0000 6 j 0x00402fe0 f 0x00402fc2\n0x00402fc2 0x00402fc8 00:0000 6 j 0x00402fe0 f 0x00402fc8\n0x00402fc8 0x00402fe0 00:0000 24 j 0x00403850\n0x00402fe0 0x00402fe4 00:0000 4 j 0x00403002 f 0x00402fe4\n0x00402fe4 0x00402fea 00:0000 6 j 0x00403002 f 0x00402fea\n0x00402fea 0x00403002 00:0000 24 j 0x00403850\n0x00403002 0x0040300a 00:0000 8 j 0x00403850 f 0x0040300a\n0x0040300a 0x00403012 00:0000 8 j 0x00403850 f 0x00403012\n0x00403012 0x0040301a 00:0000 8 j 0x00403850 f 0x0040301a\n0x0040301a 0x00403022 00:0000 8 j 0x00403850 f 0x00403022\n0x00403022 0x0040302a 00:0000 8 j 0x00403850 f 0x0040302a\n0x0040302a 0x00403032 00:0000 8 j 0x00403850 f 0x00403032\n0x00403032 0x00403038 00:0000 6 j 0x00403038\n0x00403038 0x0040305a 00:0000 34 j 0x0040307c f 0x0040305a\n0x0040305a 0x0040307c 00:0000 34 j 0x00402d2c f 0x0040307c\n0x0040307c 0x00403092 00:0000 22 j 0x00403850\n0x00403092 0x0040309e 00:0000 12 j 0x00403254 f 0x0040309e\n0x0040309e 0x004030a4 00:0000 6 j 0x004032fc f 0x004030a4\n0x004030a4 0x004030ad 00:0000 9 j 0x00403167 f 0x004030ad\n0x004030ad 0x004030af 00:0000 2 j 0x004030fb f 0x004030af\n0x004030af 0x004030b4 00:0000 5 j 0x004030c4 f 0x004030b4\n0x004030b4 0x004030b8 00:0000 4 j 0x004030dc f 0x004030b8\n0x004030b8 0x004030bc 00:0000 4 j 0x004030c4 f 0x004030bc\n0x004030bc 0x004030c4 00:0000 8 j 0x0040366f f 0x004030c4\n0x004030c4 0x004030dc 00:0000 24 j 0x00403332\n0x004030dc 0x004030ec 00:0000 16 j 0x0040318a f 0x004030ec\n0x004030ec 0x004030fb 00:0000 15 j 0x0040318a\n0x004030fb 0x00403107 00:0000 12 j 0x00403111 f 0x00403107\n0x00403107 0x00403111 00:0000 10 j 0x00403111\n0x00403111 0x0040311c 00:0000 11 j 0x00403121 f 0x0040311c\n0x0040311c 0x00403121 00:0000 5 j 0x00403121\n0x00403121 0x00403143 00:0000 34 j 0x00403641 f 0x00403143\n0x00403143 0x00403147 00:0000 4 j 0x00403152 f 0x00403147\n0x00403147 0x00403152 00:0000 11 j 0x00403152\n0x00403152 0x00403167 00:0000 21 j 0x00403633\n0x00403167 0x00403170 00:0000 9 j 0x00403492 f 0x00403170\n0x00403170 0x00403174 00:0000 4 j 0x004031f3 f 0x00403174\n0x00403174 0x0040317c 00:0000 8 j 0x00403332 f 0x0040317c\n0x0040317c 0x00403184 00:0000 8 j 0x0040366f f 0x00403184\n0x00403184 0x0040318a 00:0000 6 j 0x0040318a\n0x0040318a 0x0040319f 00:0000 21 j 0x004031cf f 0x0040319f\n0x0040319f 0x004031c3 00:0000 36 j 0x004031e2 f 0x004031c3\n0x004031c3 0x004031cf 00:0000 12 j 0x004031e2\n0x004031cf 0x004031e2 00:0000 19 j 0x004031e2\n0x004031e2 0x004031f3 00:0000 17 j 0x0040366f\n0x004031f3 0x00403202 00:0000 15 j 0x0040323d f 0x00403202\n0x00403202 0x00403209 00:0000 7 j 0x0040323d f 0x00403209\n0x00403209 0x0040321e 00:0000 21 j 0x00403232 f 0x0040321e\n0x0040321e 0x00403232 00:0000 20 j 0x00403669\n0x00403232 0x0040323d 00:0000 11 j 0x00403669\n0x0040323d 0x00403249 00:0000 12 j 0x00403249\n0x00403249 0x00403254 00:0000 11 j 0x00403669\n0x00403254 0x0040325d 00:0000 9 j 0x0040349a f 0x0040325d\n0x0040325d 0x00403263 00:0000 6 j 0x00403488 f 0x00403263\n0x00403263 0x0040326c 00:0000 9 j 0x0040366f f 0x0040326c\n0x0040326c 0x00403275 00:0000 9 j 0x0040332c f 0x00403275\n0x00403275 0x0040327a 00:0000 5 j 0x004032f6 f 0x0040327a\n0x0040327a 0x0040327f 00:0000 5 j 0x004032ad f 0x0040327f\n0x0040327f 0x00403288 00:0000 9 j 0x0040366f f 0x00403288\n0x00403288 0x004032a1 00:0000 25 j 0x0040330d f 0x004032a1\n0x004032a1 0x004032ad 00:0000 12 j 0x0040330d\n0x004032ad 0x004032ca 00:0000 29 j 0x00402d2c f 0x004032ca\n0x004032ca 0x004032d3 00:0000 9 j 0x004032df f 0x004032d3\n0x004032d3 0x004032df 00:0000 12 j 0x004032e7\n0x004032df 0x004032e7 00:0000 8 j 0x004032e7\n0x004032e7 0x004032f6 00:0000 15 j 0x00403834\n0x004032f6 0x004032fc 00:0000 6 j 0x004032fc\n0x004032fc 0x00403303 00:0000 7 j 0x00403303\n0x00403303 0x0040330d 00:0000 10 j 0x0040330d\n0x0040330d 0x0040331f 00:0000 18 j 0x004034ff f 0x0040331f\n0x0040331f 0x0040332c 00:0000 13 j 0x00403538\n0x0040332c 0x00403332 00:0000 6 j 0x00403332\n0x00403332 0x00403358 00:0000 38 j 0x00403364 f 0x00403358\n0x00403358 0x00403364 00:0000 12 j 0x004033ce\n0x00403364 0x00403366 00:0000 2 j 0x00403377 f 0x00403366\n0x00403366 0x0040336b 00:0000 5 j 0x004033ce f 0x0040336b\n0x0040336b 0x00403377 00:0000 12 j 0x004033ce\n0x00403377 0x0040337f 00:0000 8 j 0x00403385 f 0x0040337f\n0x0040337f 0x00403385 00:0000 6 j 0x00403385\n0x00403385 0x00403391 00:0000 12 j 0x004033ce f 0x00403391\n0x00403391 0x004033b4 00:0000 35 j 0x004033c4 f 0x004033b4\n0x004033b4 0x004033c4 00:0000 16 j 0x004033ce\n0x004033c4 0x004033ce 00:0000 10 j 0x004033ce\n0x004033ce 0x0040342e 00:0000 96 j 0x0040344b f 0x0040342e\n0x0040342e 0x00403437 00:0000 9 j 0x0040344b f 0x00403437\n0x00403437 0x0040344b 00:0000 20 j 0x0040344b\n0x0040344b 0x00403454 00:0000 9 j 0x0040346c f 0x00403454\n0x00403454 0x00403458 00:0000 4 j 0x0040346c f 0x00403458\n0x00403458 0x0040346c 00:0000 20 j 0x0040346c\n0x0040346c 0x00403471 00:0000 5 j 0x00403482 f 0x00403471\n0x00403471 0x00403482 00:0000 17 j 0x00403482\n0x00403482 0x00403488 00:0000 6 j 0x00403249\n0x00403488 0x00403492 00:0000 10 j 0x00403492\n0x00403492 0x0040349a 00:0000 8 j 0x004034c4\n0x0040349a 0x004034a3 00:0000 9 j 0x00403111 f 0x004034a3\n0x004034a3 0x004034ab 00:0000 8 j 0x00403303 f 0x004034ab\n0x004034ab 0x004034b4 00:0000 9 j 0x0040366f f 0x004034b4\n0x004034b4 0x004034c4 00:0000 16 j 0x004034c4\n0x004034c4 0x004034db 00:0000 23 j 0x0040330d f 0x004034db\n0x004034db 0x004034ff 00:0000 36 j 0x0040330d\n0x004034ff 0x0040350b 00:0000 12 j 0x0040331f f 0x0040350b\n0x0040350b 0x00403513 00:0000 8 j 0x0040352b f 0x00403513\n0x00403513 0x0040351e 00:0000 11 j 0x00403524 f 0x0040351e\n0x0040351e 0x00403524 00:0000 6 j 0x00403528\n0x00403524 0x00403528 00:0000 4 j 0x00403528\n0x00403528 0x0040352b 00:0000 3 j 0x0040353e\n0x0040352b 0x00403533 00:0000 8 j 0x00403536 f 0x00403533\n0x00403533 0x00403536 00:0000 3 j 0x00403538\n0x00403536 0x00403538 00:0000 2 j 0x00403538\n0x00403538 0x0040353e 00:0000 6 j 0x0040353e\n0x0040353e 0x00403543 00:0000 5 j 0x0040355d f 0x00403543\n0x00403543 0x00403547 00:0000 4 j 0x0040355d f 0x00403547\n0x00403547 0x00403549 00:0000 2 j 0x0040354d f 0x00403549\n0x00403549 0x0040354d 00:0000 4 j 0x0040355d f 0x0040354d\n0x0040354d 0x0040355d 00:0000 16 j 0x0040355d\n0x0040355d 0x0040356d 00:0000 16 j 0x0040356f f 0x0040356d\n0x0040356d 0x0040356f 00:0000 2 j 0x0040356f\n0x0040356f 0x00403577 00:0000 8 j 0x00403583 f 0x00403577\n0x00403577 0x00403583 00:0000 12 j 0x0040359d\n0x00403583 0x00403597 00:0000 20 j 0x0040359d f 0x00403597\n0x00403597 0x0040359d 00:0000 6 j 0x0040359d\n0x0040359d 0x004035a3 00:0000 6 j 0x004035a9 f 0x004035a3\n0x004035a3 0x004035a9 00:0000 6 j 0x004035a9\n0x004035a9 0x004035ac 00:0000 3 j 0x004035ac\n0x004035ac 0x004035bc 00:0000 16 j 0x004035c2 f 0x004035bc\n0x004035bc 0x004035c2 00:0000 6 j 0x004035ef f 0x004035c2\n0x004035c2 0x004035e4 00:0000 34 j 0x004035ea f 0x004035e4\n0x004035e4 0x004035ea 00:0000 6 j 0x004035ea\n0x004035ea 0x004035ef 00:0000 5 j 0x004035ac\n0x004035ef 0x0040360d 00:0000 30 j 0x0040366f f 0x0040360d\n0x0040360d 0x00403611 00:0000 4 j 0x00403618 f 0x00403611\n0x00403611 0x00403618 00:0000 7 j 0x0040366f f 0x00403618\n0x00403618 0x0040362a 00:0000 18 j 0x00403669\n0x0040362a 0x00403630 00:0000 6 j 0x00403637 f 0x00403630\n0x00403630 0x00403633 00:0000 3 j 0x00403633\n0x00403633 0x00403637 00:0000 4 j 0x0040362a f 0x00403637\n0x00403637 0x00403641 00:0000 10 j 0x00403669\n0x00403641 0x00403645 00:0000 4 j 0x00403650 f 0x00403645\n0x00403645 0x00403650 00:0000 11 j 0x00403650\n0x00403650 0x00403658 00:0000 8 j 0x0040365f\n0x00403658 0x0040365e 00:0000 6 j 0x00403663 f 0x0040365e\n0x0040365e 0x0040365f 00:0000 1 j 0x0040365f\n0x0040365f 0x00403663 00:0000 4 j 0x00403658 f 0x00403663\n0x00403663 0x00403669 00:0000 6 j 0x00403669\n0x00403669 0x0040366f 00:0000 6 j 0x0040366f\n0x0040366f 0x0040367c 00:0000 13 j 0x00403834 f 0x0040367c\n0x0040367c 0x00403687 00:0000 11 j 0x004036bc f 0x00403687\n0x00403687 0x0040368f 00:0000 8 j 0x00403698 f 0x0040368f\n0x0040368f 0x00403698 00:0000 9 j 0x004036b2\n0x00403698 0x0040369d 00:0000 5 j 0x004036a6 f 0x0040369d\n0x0040369d 0x004036a6 00:0000 9 j 0x004036b2\n0x004036a6 0x004036ab 00:0000 5 j 0x004036bc f 0x004036ab\n0x004036ab 0x004036b2 00:0000 7 j 0x004036b2\n0x004036b2 0x004036bc 00:0000 10 j 0x004036bc\n0x004036bc 0x004036d9 00:0000 29 j 0x004036fe f 0x004036d9\n0x004036d9 0x004036dd 00:0000 4 j 0x004036fa\n0x004036dd 0x004036fa 00:0000 29 j 0x004036fe f 0x004036fa\n0x004036fa 0x004036fe 00:0000 4 j 0x004036dd f 0x004036fe\n0x004036fe 0x0040372d 00:0000 47 j 0x0040375b f 0x0040372d\n0x0040372d 0x00403736 00:0000 9 j 0x0040375b f 0x00403736\n0x00403736 0x0040373e 00:0000 8 j 0x00403757\n0x0040373e 0x00403757 00:0000 25 j 0x0040375b f 0x00403757\n0x00403757 0x0040375b 00:0000 4 j 0x0040373e f 0x0040375b\n0x0040375b 0x0040376a 00:0000 15 j 0x004037df f 0x0040376a\n0x0040376a 0x0040376e 00:0000 4 j 0x004037df f 0x0040376e\n0x0040376e 0x0040377a 00:0000 12 j 0x0040377a\n0x0040377a 0x004037a0 00:0000 38 j 0x004037d6 f 0x004037a0\n0x004037a0 0x004037a8 00:0000 8 j 0x004037d6 f 0x004037a8\n0x004037a8 0x004037d4 00:0000 44 j 0x0040377a f 0x004037d4\n0x004037d4 0x004037d6 00:0000 2 j 0x004037f9\n0x004037d6 0x004037df 00:0000 9 j 0x004037f9\n0x004037df 0x004037f9 00:0000 26 j 0x004037f9\n0x004037f9 0x00403802 00:0000 9 j 0x00403834 f 0x00403802\n0x00403802 0x0040380b 00:0000 9 j 0x00403834 f 0x0040380b\n0x0040380b 0x00403813 00:0000 8 j 0x00403830\n0x00403813 0x00403830 00:0000 29 j 0x00403834 f 0x00403830\n0x00403830 0x00403834 00:0000 4 j 0x00403813 f 0x00403834\n0x00403834 0x0040383d 00:0000 9 j 0x00403850 f 0x0040383d\n0x0040383d 0x00403850 00:0000 19 j 0x00403850\n0x00403850 0x00403862 00:0000 18 j 0x00403875 f 0x00403862\n0x00403862 0x00403875 00:0000 19 j 0x00402de7\n0x00403875 0x0040387e 00:0000 9 j 0x00403888 f 0x0040387e\n0x0040387e 0x00403888 00:0000 10 j 0x00403888\n0x00403888 0x0040388e 00:0000 6 j 0x0040388e\n0x0040388e 0x0040389d 00:0000 15\n\n",
            "broken": false
        },
        {
            "name": "mac-ls switch count",
            "file": "bins/mach0/ls-osx-x86_64",
            "args": "",
            "commands": [
                "e anal.jmptbl=true",
                "af",
                "f~switch",
                "",
                "",
                ""
            ],
            "expected": "0x100001527 1 switch.0x100001527\n\n",
            "broken": false
        },
        {
            "name": "mac-ls switch count",
            "file": "bins/pe/ConsoleApplication1.exe",
            "args": "",
            "commands": [
                "e anal.jmptbl=true",
                "s 0x401090",
                "af",
                "afb",
                "",
                "",
                ""
            ],
            "expected": "0x00401090 0x004010d2 00:0000 66 j 0x004010e8 f 0x004010d2\n0x004010d2 0x004010e8 00:0000 22\n0x004010e8 0x00401103 00:0000 27 j 0x00401103\n0x00401103 0x0040110e 00:0000 11 j 0x0040116b f 0x0040110e\n0x0040110e 0x00401115 00:0000 7 j 0x0040114f f 0x00401115\n0x00401115 0x00401119 00:0000 4 j 0x00401123 f 0x00401119\n0x00401119 0x00401123 00:0000 10 j 0x00401123\n0x00401123 0x00401138 00:0000 21 j 0x00401103 f 0x00401138\n0x00401138 0x0040114f 00:0000 23\n0x0040114f 0x0040116b 00:0000 28\n0x0040116b 0x00401173 00:0000 8 j 0x004011e5 f 0x00401173\n0x00401173 0x00401182 00:0000 15 j 0x00401182\n0x00401182 0x0040118a 00:0000 8 j 0x004011c8 f 0x0040118a\n0x0040118a 0x00401191 00:0000 7\n0x00401191 0x00401196 00:0000 5 j 0x004011d8\n0x00401196 0x004011a6 00:0000 16 j 0x004011d8\n0x004011a6 0x004011ac 00:0000 6 j 0x004011b1 f 0x004011ac\n0x004011ac 0x004011b1 00:0000 5 j 0x004011d8\n0x004011b1 0x004011b5 00:0000 4 j 0x004011ba f 0x004011b5\n0x004011b5 0x004011ba 00:0000 5 j 0x004011d8\n0x004011ba 0x004011be 00:0000 4 j 0x004011d8 f 0x004011be\n0x004011be 0x004011c3 00:0000 5 j 0x004011d8\n0x004011c3 0x004011c8 00:0000 5 j 0x004011d8\n0x004011c8 0x004011d8 00:0000 16 j 0x004011d8\n0x004011d8 0x004011e2 00:0000 10 j 0x00401182 f 0x004011e2\n0x004011e2 0x004011e5 00:0000 3 j 0x004011e5\n0x004011e5 0x00401249 00:0000 100\n\n",
            "broken": false
        },
        {
            "name": "ls_amd64 all switches",
            "file": "bins/jmptbl/ls_amd64",
            "args": "",
            "commands": [
                "aaa",
                "CC. @@ switch",
                "",
                ""
            ],
            "expected": "switch table (275 cases) at 0x4140b0\nswitch table (54 cases) at 0x41a048\nswitch table (54 cases) at 0x419e98\nswitch table (5 cases) at 0x414088\nswitch table (121 cases) at 0x413cc0\nswitch table (54 cases) at 0x41a418\nswitch table (54 cases) at 0x41a268\nswitch table (127 cases) at 0x418e58\nswitch table (11 cases) at 0x418e00\nswitch table (123 cases) at 0x4196f0\nswitch table (123 cases) at 0x419318\nswitch table (10 cases) at 0x419dc0\n\n",
            "broken": false
        },
        {
            "name": "gcc_5.5.0_64 switch/case flags",
            "file": "bins/jmptbl/test_gcc_5.5.0_64.out",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x0000059d 1 switch.0x0000059d\n0x00000622 1 case.0x59d.0\n0x000005b2 1 case.0x59d.1\n0x000005c0 1 case.0x59d.2\n0x000005c0 1 case.0x59d.3\n0x000005c0 1 case.0x59d.4\n0x000005ce 1 case.0x59d.5\n0x000005dc 1 case.0x59d.6\n0x000005ea 1 case.0x59d.7\n0x00000622 1 case.0x59d.8\n0x000005f8 1 case.0x59d.9\n0x00000622 1 case.0x59d.10\n0x00000606 1 case.0x59d.11\n0x00000614 1 case.0x59d.12\n0x0000059f 1 case.0x59d.13\n0x00000622 1 case.default.0x622\n\n",
            "broken": false
        },
        {
            "name": "gcc_7.2.0_64 switch/case flags",
            "file": "bins/jmptbl/test_gcc_7.2.0_64.out",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x0000054d 1 switch.0x0000054d\n0x000005d2 1 case.0x54d.0\n0x00000562 1 case.0x54d.1\n0x00000570 1 case.0x54d.2\n0x00000570 1 case.0x54d.3\n0x00000570 1 case.0x54d.4\n0x0000057e 1 case.0x54d.5\n0x0000058c 1 case.0x54d.6\n0x0000059a 1 case.0x54d.7\n0x000005d2 1 case.0x54d.8\n0x000005a8 1 case.0x54d.9\n0x000005d2 1 case.0x54d.10\n0x000005b6 1 case.0x54d.11\n0x000005c4 1 case.0x54d.12\n0x0000054f 1 case.0x54d.13\n0x000005d2 1 case.default.0x5d2\n\n",
            "broken": false
        },
        {
            "name": "clang_3.8_32 switch/case flags",
            "file": "bins/jmptbl/test_clang_3.8_32.out",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x080483fd 1 switch.0x080483fd\n0x0804840d 1 case.0x80483fd.0\n0x08048404 1 case.0x80483fd.1\n0x08048404 1 case.0x80483fd.2\n0x08048404 1 case.0x80483fd.3\n0x08048416 1 case.0x80483fd.4\n0x0804841f 1 case.0x80483fd.5\n0x08048428 1 case.0x80483fd.6\n0x08048431 1 case.0x80483fd.7\n0x0804843a 1 case.0x80483fd.8\n0x08048431 1 case.0x80483fd.9\n0x08048443 1 case.0x80483fd.10\n0x0804844c 1 case.0x80483fd.11\n0x08048455 1 case.0x80483fd.12\n0x08048431 1 case.default.0x8048431\n\n",
            "broken": false
        },
        {
            "name": "clang_3.8_64 switch/case flags",
            "file": "bins/jmptbl/test_clang_3.8_64.out",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x004004d8 1 switch.0x004004d8\n0x004004e6 1 case.0x4004d8.0\n0x004004df 1 case.0x4004d8.1\n0x004004df 1 case.0x4004d8.2\n0x004004df 1 case.0x4004d8.3\n0x004004ed 1 case.0x4004d8.4\n0x004004f4 1 case.0x4004d8.5\n0x004004fb 1 case.0x4004d8.6\n0x00400502 1 case.0x4004d8.7\n0x00400509 1 case.0x4004d8.8\n0x00400502 1 case.0x4004d8.9\n0x00400510 1 case.0x4004d8.10\n0x00400517 1 case.0x4004d8.11\n0x0040051e 1 case.0x4004d8.12\n0x00400502 1 case.default.0x400502\n\n",
            "broken": false
        },
        {
            "name": "clang_5.0_32 switch/case flags",
            "file": "bins/jmptbl/test_clang_5.0_32.out",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x080483fd 1 switch.0x080483fd\n0x0804840d 1 case.0x80483fd.0\n0x08048404 1 case.0x80483fd.1\n0x08048404 1 case.0x80483fd.2\n0x08048404 1 case.0x80483fd.3\n0x08048416 1 case.0x80483fd.4\n0x0804841f 1 case.0x80483fd.5\n0x08048428 1 case.0x80483fd.6\n0x08048431 1 case.0x80483fd.7\n0x0804843a 1 case.0x80483fd.8\n0x08048431 1 case.0x80483fd.9\n0x08048443 1 case.0x80483fd.10\n0x0804844c 1 case.0x80483fd.11\n0x08048455 1 case.0x80483fd.12\n0x08048431 1 case.default.0x8048431\n\n",
            "broken": false
        },
        {
            "name": "clang_5.0_64 switch/case flags",
            "file": "bins/jmptbl/test_clang_5.0_64.out",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x004004c8 1 switch.0x004004c8\n0x004004d6 1 case.0x4004c8.0\n0x004004cf 1 case.0x4004c8.1\n0x004004cf 1 case.0x4004c8.2\n0x004004cf 1 case.0x4004c8.3\n0x004004dd 1 case.0x4004c8.4\n0x004004e4 1 case.0x4004c8.5\n0x004004eb 1 case.0x4004c8.6\n0x004004f2 1 case.0x4004c8.7\n0x004004f9 1 case.0x4004c8.8\n0x004004f2 1 case.0x4004c8.9\n0x00400500 1 case.0x4004c8.10\n0x00400507 1 case.0x4004c8.11\n0x0040050e 1 case.0x4004c8.12\n0x004004f2 1 case.default.0x4004f2\n\n",
            "broken": false
        },
        {
            "name": "msvc_1700_64 switch/case flags",
            "file": "bins/jmptbl/test_msvc_1700_64.exe",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x140001023 1 switch.0x140001023\n0x140004b01 1 switch.0x140004b01\n0x140001025 1 case.0x140001023.0\n0x140001038 1 case.0x140001023.1\n0x140001038 1 case.0x140001023.2\n0x140001038 1 case.0x140001023.3\n0x14000104b 1 case.0x140001023.4\n0x14000105e 1 case.0x140001023.5\n0x140001071 1 case.0x140001023.6\n0x1400010d0 1 case.0x140001023.7\n0x140001084 1 case.0x140001023.8\n0x1400010d0 1 case.0x140001023.9\n0x140001097 1 case.0x140001023.10\n0x1400010aa 1 case.0x140001023.11\n0x1400010bd 1 case.0x140001023.12\n0x1400010d0 1 case.default.0x1400010d0\n0x140004b47 1 case.0x140004b01.0\n0x140004b4b 1 case.0x140004b01.1\n0x140004b56 1 case.0x140004b01.2\n0x140004b62 1 case.0x140004b01.3\n0x140004b77 1 case.0x140004b01.4\n0x140004b80 1 case.0x140004b01.5\n0x140004b92 1 case.0x140004b01.6\n0x140004ba5 1 case.0x140004b01.7\n0x140004bc1 1 case.0x140004b01.8\n0x140004bcb 1 case.0x140004b01.9\n0x140004bde 1 case.0x140004b01.10\n0x140004bf2 1 case.0x140004b01.11\n0x140004c0f 1 case.0x140004b01.12\n0x140004c20 1 case.0x140004b01.13\n0x140004c3a 1 case.0x140004b01.14\n0x140004c55 1 case.0x140004b01.15\n0x140004c79 1 case.0x140004b01.16\n0x140004a40 1 case.default.0x140004a40\n\n",
            "broken": false
        },
        {
            "name": "msvc_1900_32 switch/case flags",
            "file": "bins/jmptbl/test_msvc_1900_32.exe",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x0040100e 1 switch.0x0040100e\n0x0040beb5 1 switch.0x0040beb5\n0x0040bf68 1 switch.0x0040bf68\n0x00401015 1 case.0x40100e.0\n0x00401025 1 case.0x40100e.1\n0x00401025 1 case.0x40100e.2\n0x00401025 1 case.0x40100e.3\n0x00401035 1 case.0x40100e.4\n0x00401045 1 case.0x40100e.5\n0x00401055 1 case.0x40100e.6\n0x004010a5 1 case.0x40100e.7\n0x00401065 1 case.0x40100e.8\n0x004010a5 1 case.0x40100e.9\n0x00401075 1 case.0x40100e.10\n0x00401085 1 case.0x40100e.11\n0x00401095 1 case.0x40100e.12\n0x004010a5 1 case.default.0x4010a5\n0x0040bed4 1 case.0x40beb5.0\n0x0040bedc 1 case.0x40beb5.1\n0x0040bee8 1 case.0x40beb5.2\n0x0040befc 1 case.0x40beb5.3\n0x0040c15b 1 case.default.0x40c15b\n0x0040bf80 1 case.0x40bf68.0\n0x0040bf88 1 case.0x40bf68.1\n0x0040bf98 1 case.0x40bf68.2\n0x0040bfac 1 case.0x40bf68.3\n0x0040c074 1 case.default.0x40c074\n\n",
            "broken": false
        },
        {
            "name": "msvc_1900_64 switch/case flags",
            "file": "bins/jmptbl/test_msvc_1900_64.exe",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x140001023 1 switch.0x140001023\n0x14000c185 1 switch.0x14000c185\n0x1400095b4 1 switch.0x1400095b4\n0x140001025 1 case.0x140001023.0\n0x140001038 1 case.0x140001023.1\n0x140001038 1 case.0x140001023.2\n0x140001038 1 case.0x140001023.3\n0x14000104b 1 case.0x140001023.4\n0x14000105e 1 case.0x140001023.5\n0x140001071 1 case.0x140001023.6\n0x1400010d0 1 case.0x140001023.7\n0x140001084 1 case.0x140001023.8\n0x1400010d0 1 case.0x140001023.9\n0x140001097 1 case.0x140001023.10\n0x1400010aa 1 case.0x140001023.11\n0x1400010bd 1 case.0x140001023.12\n0x1400010d0 1 case.default.0x1400010d0\n0x14000c1d0 1 case.0x14000c185.0\n0x14000c1ef 1 case.0x14000c185.1\n0x14000c1d1 1 case.0x14000c185.2\n0x14000c1df 1 case.0x14000c185.3\n0x14000c21b 1 case.0x14000c185.4\n0x14000c220 1 case.0x14000c185.5\n0x14000c230 1 case.0x14000c185.6\n0x14000c240 1 case.0x14000c185.7\n0x14000c1d8 1 case.0x14000c185.8\n0x14000c270 1 case.0x14000c185.9\n0x14000c280 1 case.0x14000c185.10\n0x14000c200 1 case.0x14000c185.11\n0x14000c290 1 case.0x14000c185.12\n0x14000c258 1 case.0x14000c185.13\n0x14000c2a0 1 case.0x14000c185.14\n0x14000c2c0 1 case.0x14000c185.15\n0x14000c1f5 1 case.0x14000c185.16\n0x14000c100 1 case.default.0x14000c100\n0x1400095b6 1 case.0x1400095b4.0\n0x1400095bd 1 case.0x1400095b4.1\n0x1400095c4 1 case.0x1400095b4.2\n0x1400095cb 1 case.0x1400095b4.3\n0x1400095d2 1 case.0x1400095b4.4\n0x1400095d9 1 case.0x1400095b4.5\n0x1400095e0 1 case.0x1400095b4.6\n0x1400095e7 1 case.0x1400095b4.7\n0x1400095ee 1 case.0x1400095b4.8\n0x1400095f5 1 case.0x1400095b4.9\n0x1400095fc 1 case.0x1400095b4.10\n0x140009603 1 case.0x1400095b4.11\n0x14000960a 1 case.0x1400095b4.12\n0x140009611 1 case.0x1400095b4.13\n0x140009618 1 case.0x1400095b4.14\n0x14000961d 1 case.default.0x14000961d\n\n",
            "broken": false
        },
        {
            "name": "msvc_1913_32 switch/case flags",
            "file": "bins/jmptbl/test_msvc_1913_32.exe",
            "args": "",
            "commands": [
                "aaa",
                "f~switch",
                "f~case.",
                "",
                ""
            ],
            "expected": "0x0040100e 1 switch.0x0040100e\n0x004028a5 1 switch.0x004028a5\n0x00402958 1 switch.0x00402958\n0x00401015 1 case.0x40100e.0\n0x00401026 1 case.0x40100e.1\n0x00401026 1 case.0x40100e.2\n0x00401026 1 case.0x40100e.3\n0x00401037 1 case.0x40100e.4\n0x00401048 1 case.0x40100e.5\n0x00401059 1 case.0x40100e.6\n0x004010ae 1 case.0x40100e.7\n0x0040106a 1 case.0x40100e.8\n0x004010ae 1 case.0x40100e.9\n0x0040107b 1 case.0x40100e.10\n0x0040108c 1 case.0x40100e.11\n0x0040109d 1 case.0x40100e.12\n0x004010ae 1 case.default.0x4010ae\n0x004028c4 1 case.0x4028a5.0\n0x004028cc 1 case.0x4028a5.1\n0x004028d8 1 case.0x4028a5.2\n0x004028ec 1 case.0x4028a5.3\n0x00402b4b 1 case.default.0x402b4b\n0x00402970 1 case.0x402958.0\n0x00402978 1 case.0x402958.1\n0x00402988 1 case.0x402958.2\n0x0040299c 1 case.0x402958.3\n0x00402a64 1 case.default.0x402a64\n\n",
            "broken": false
        },
        {
            "name": "./nojmpabove",
            "file": "bins/pe/test.exe",
            "args": "",
            "commands": [
                "e anal.jmpabove=false",
                "af",
                "afb",
                "",
                "",
                ""
            ],
            "expected": "0x0040132b 0x00401335 00:0000 10\n\n",
            "broken": false
        },
        {
            "name": "./noncode",
            "file": "bins/mach0/ls-osx-x86_64",
            "args": "",
            "commands": [
                "e anal.noncode=false",
                "afr",
                "afl~?str.",
                "",
                "",
                ""
            ],
            "expected": "0\n\n",
            "broken": false
        },
        {
            "name": "./noncode",
            "file": "bins/mach0/ls-osx-x86_64",
            "args": "",
            "commands": [
                "e anal.noncode=false",
                "e anal.calls=true",
                "af",
                "afl~?str.",
                "",
                "",
                ""
            ],
            "expected": "0\n\n",
            "broken": false
        },
        {
            "name": "./searchstringrefs",
            "file": "bins/pe/test.exe",
            "args": "",
            "commands": [
                "e anal.refstr=true",
                "s 0x401000",
                "af",
                "afx",
                "",
                "",
                ""
            ],
            "expected": "d 0x00401006 -\u003e 0x0040d004\ns 0x00401010 -\u003e 0x0040b9a0\nC 0x00401015 -\u003e 0x004010e4\nd 0x0040101e -\u003e 0x0040b9a8\nC 0x00401023 -\u003e 0x004010c7\nC 0x00401032 -\u003e 0x0040103b\n\n",
            "broken": false
        },
        {
            "name": "16bit segment bounds - capstone",
            "file": "malloc://1024k",
            "args": "",
            "commands": [
                "",
                "e asm.arch = x86",
                "e anal.arch = x86",
                "e asm.bits=16",
                "e anal.hasnext=0",
                "wx e9c300 @ f000:ffaa",
                "s f000:ffaa",
                "pi 1",
                "",
                ""
            ],
            "expected": "jmp 0xf0070\n\n",
            "broken": false
        },
        {
            "name": "16bit segment bounds 2",
            "file": "malloc://1024k",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=16",
                "e io.va=1",
                "wx e97ae7 @ f000:1911",
                "s f000:1911",
                "ao 1~jump",
                "",
                ""
            ],
            "expected": "jump: 0x000f008e\n\n",
            "broken": false
        },
        {
            "name": "16bit segment bounds 2 - capstone",
            "file": "malloc://1024k",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86.cs",
                "e asm.bits=16",
                "e io.va=1",
                "wx e97ae7 @ f000:1911",
                "s f000:1911",
                "ao 1~jump",
                "",
                ""
            ],
            "expected": "jump: 0x000f008e\n\n",
            "broken": false
        },
        {
            "name": "sar on x86-32",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=32",
                "e anal.hasnext=0",
                "# testing mov eax, -4 sar",
                "# 64bit code seems to fail",
                "# wx 48c7c0fcffffff 48d1f8 48d1f8 48d1f8 48d1f8 48d1f8 48d1f8",
                "wx b8fcffffff d1f8 d1f8 d1f8 d1f8 d1f8 d1f8",
                "aes",
                "dr?eax",
                "aes",
                "dr?eax",
                "aes",
                "dr?eax",
                "aes",
                "dr?eax",
                "aes",
                "dr?eax",
                "",
                ""
            ],
            "expected": "0xfffffffc\n0xfffffffe\n0xffffffff\n0xffffffff\n0xffffffff\n\n",
            "broken": false
        },
        {
            "name": "sar on x86-64",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=64",
                "e anal.hasnext=0",
                "# testing mov eax, -4 sar",
                "wx 48c7c0fcffffff 48d1f8 48d1f8 48d1f8 48d1f8 48d1f8 48d1f8",
                "aes",
                "dr?rax",
                "aes",
                "dr?rax",
                "aes",
                "dr?rax",
                "aes",
                "dr?rax",
                "",
                ""
            ],
            "expected": "0xfffffffffffffffc\n0xfffffffffffffffe\n0xffffffffffffffff\n0xffffffffffffffff\n\n",
            "broken": false
        },
        {
            "name": "",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=64",
                "e anal.hasnext=0",
                "wx 48c7c0fcffffff 48d1f8 48d1f8 48d1f8",
                "aes",
                "dr?rax",
                "aes",
                "dr?rax",
                "aes",
                "dr?rax",
                "",
                ""
            ],
            "expected": "0xfffffffffffffffc\n0xfffffffffffffffe\n0xffffffffffffffff\n\n",
            "broken": false
        },
        {
            "name": "int 0x80 doesn t terminate a function",
            "file": "-",
            "args": "",
            "commands": [
                "e asm.arch=x86",
                "e asm.bits=32",
                "e anal.hasnext=0",
                "wx 5589d8b900000000b885000000cd8089c35dc3",
                "af",
                "afi~size",
                "",
                ""
            ],
            "expected": "size: 19\n\n",
            "broken": false
        },
        {
            "name": "ao 4~bytes",
            "file": "-",
            "args": "",
            "commands": [
                "e asm.arch=x86",
                "e asm.bits=32",
                "e anal.hasnext=0",
                "wx 554889e5415741564155",
                "ao 3~bytes",
                "",
                ""
            ],
            "expected": "bytes: 55\nbytes: 48\nbytes: 89e5\n\n",
            "broken": false
        },
        {
            "name": "af fwd-jmp",
            "file": "-",
            "args": "",
            "commands": [
                "e asm.arch=x86",
                "e asm.bits=32",
                "wx 558bec6800304000e86300000083c404eb0d6808304000e85400000083c4046814304000e84700000083c40433c05dc3",
                "af",
                "afb",
                "",
                ""
            ],
            "expected": "\n\n",
            "broken": true
        },
        {
            "name": "af fwd-jmp",
            "file": "bins/elf/license_1.out",
            "args": "",
            "commands": [
                "",
                "af @ main",
                "afb @ main~?",
                "",
                ""
            ],
            "expected": "9\n\n",
            "broken": false
        },
        {
            "name": "./x86_32_cs",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=32",
                "e anal.hasnext=0",
                "b 0x4e",
                "wx 743684c0741284d2b8010000007509f3c30f1f8000000000488b4e40488b07488b1648394f407f187c1e4889d64889c7e933e1ffff0f1f0084d274c60f1f4000b8ffffffffc36690b801000000c3",
                "af",
                "pif~?",
                "afi $$~size[1]",
                "",
                ""
            ],
            "expected": "32\n78\n\n",
            "broken": false
        },
        {
            "name": "./x86_32_cs",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=32",
                "e anal.hasnext=0",
                "b 0x4e",
                "wx 743684c0741284d2b8010000007509f3c30f1f8000000000488b4e40488b07488b1648394f407f187c1e4889d64889c7e933e1ffff0f1f0084d274c60f1f4000b8ffffffffc36690b801000000c3",
                "af",
                "# count basic blocks",
                "pdr~true?",
                "",
                ""
            ],
            "expected": "8\n\n",
            "broken": false
        },
        {
            "name": "./x86_32_cs",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "e asm.arch=x86",
                "e asm.bits=32",
                "e anal.hasnext=0",
                "b 0x4e",
                "wx 5589e583ec2083f8000f8507000000b800000000eb05b80100000083c4205dc3",
                "af",
                "# count basic blocks",
                "pdr~true?",
                "pdr~false?",
                "",
                ""
            ],
            "expected": "3\n1\n\n",
            "broken": false
        },
        {
            "name": "./x86_win",
            "file": "bins/pe/standard.exe",
            "args": "",
            "commands": [
                "aaa",
                "afi @ sub.msvcrt.dll_printf_b2d~name"
            ],
            "expected": "name: sub.msvcrt.dll_printf_b2d\n",
            "broken": false
        },
        {
            "name": "./x86_win",
            "file": "bins/pe/ioli/w32/crackme0x00.exe",
            "args": "",
            "commands": [
                "aaa",
                "pd 1 @ sym.imp.msvcrt.dll_strlen~?dword",
                "",
                "",
                ""
            ],
            "expected": "1\n\n",
            "broken": false
        },
        {
            "name": "./x86_win",
            "file": "bins/pe/testx64.exe",
            "args": "",
            "commands": [
                "aaa",
                "pd 1 @ sym.imp.VCRUNTIME140.dll_memset~?qword",
                "",
                "",
                ""
            ],
            "expected": "1\n\n",
            "broken": false
        },
        {
            "name": "./x86_win",
            "file": "bins/pe/96workingsections.exe",
            "args": "",
            "commands": [
                "aaa",
                "afb @ sym.imp.kernel32.dll_ExitProcess"
            ],
            "expected": "\n",
            "broken": false
        }
    ]
}