{
    "type": "cmd",
    "tests": [{
        "name": "PE JSON test",
        "file": "bins/pe/ch22.exe",
        "args": "-nn",
        "commands": ["e asm.bits=32", "s 0x80", "pfj.pe_nt_image_headers32", "", ""],
        "expected": "[{\"name\":\"signature\",\"type\":\"z\",\"offset\":128,\"value\":128,\"string\":\"PE\"},{\"name\":\"fileHeader\",\"type\":\"pe_image_file_header\",\"offset\":132,\"value\":[{\"name\":\"machine\",\"type\":\"E\",\"offset\":132,\"value\":\"pe_machine\"},{\"name\":\"numberOfSections\",\"type\":\"w\",\"offset\":134,\"value\":4},{\"name\":\"timeDateStamp\",\"type\":\"t\",\"offset\":136,\"value\":\"Thu Sep 11 18:21:46 2014\"},{\"name\":\"pointerToSymbolTable\",\"type\":\"x\",\"offset\":140,\"value\":0},{\"name\":\"numberOfSymbols\",\"type\":\"x\",\"offset\":144,\"value\":0},{\"name\":\"sizeOfOptionalHeader\",\"type\":\"w\",\"offset\":148,\"value\":224},{\"name\":\"characteristics\",\"type\":\"B\",\"offset\":150,\"value\":\"0x00000102 : IMAGE_FILE_EXECUTABLE_IMAGE | IMAGE_FILE_32BIT_MACHINE\"}]},{\"name\":\"optionalHeader\",\"type\":\"pe_image_optional_header32\",\"offset\":152,\"value\":[{\"name\":\"magic\",\"type\":\"E\",\"offset\":152,\"value\":\"pe_magic\"},{\"name\":\"majorLinkerVersion\",\"type\":\"b\",\"offset\":154,\"value\":11},{\"name\":\"minorLinkerVersion\",\"type\":\"b\",\"offset\":155,\"value\":0},{\"name\":\"sizeOfCode\",\"type\":\"x\",\"offset\":156,\"value\":12288},{\"name\":\"sizeOfInitializedData\",\"type\":\"x\",\"offset\":160,\"value\":13312},{\"name\":\"sizeOfUninitializedData\",\"type\":\"x\",\"offset\":164,\"value\":0},{\"name\":\"addressOfEntryPoint\",\"type\":\"x\",\"offset\":168,\"value\":20286},{\"name\":\"baseOfCode\",\"type\":\"x\",\"offset\":172,\"value\":8192},{\"name\":\"baseOfData\",\"type\":\"x\",\"offset\":176,\"value\":24576},{\"name\":\"imageBase\",\"type\":\"x\",\"offset\":180,\"value\":4194304},{\"name\":\"sectionAlignment\",\"type\":\"x\",\"offset\":184,\"value\":8192},{\"name\":\"fileAlignment\",\"type\":\"x\",\"offset\":188,\"value\":512},{\"name\":\"majorOperatingSystemVersion\",\"type\":\"w\",\"offset\":192,\"value\":4},{\"name\":\"minorOperatingSystemVersion\",\"type\":\"w\",\"offset\":194,\"value\":0},{\"name\":\"majorImageVersion\",\"type\":\"w\",\"offset\":196,\"value\":0},{\"name\":\"minorImageVersion\",\"type\":\"w\",\"offset\":198,\"value\":0},{\"name\":\"majorSubsystemVersion\",\"type\":\"w\",\"offset\":200,\"value\":6},{\"name\":\"minorSubsystemVersion\",\"type\":\"w\",\"offset\":202,\"value\":0},{\"name\":\"win32VersionValue\",\"type\":\"x\",\"offset\":204,\"value\":0},{\"name\":\"sizeOfImage\",\"type\":\"x\",\"offset\":208,\"value\":57344},{\"name\":\"sizeOfHeaders\",\"type\":\"x\",\"offset\":212,\"value\":1024},{\"name\":\"checkSum\",\"type\":\"x\",\"offset\":216,\"value\":0},{\"name\":\"subsystem\",\"type\":\"E\",\"offset\":220,\"value\":\"pe_subsystem\"},{\"name\":\"dllCharacteristics\",\"type\":\"B\",\"offset\":222,\"value\":\"0x00008560 : IMAGE_DLLCHARACTERISTICS_HIGH_ENTROPY_VA | IMAGE_DLLCHARACTERISTICS_DYNAMIC_BASE | IMAGE_DLLCHARACTERISTICS_NX_COMPAT | IMAGE_DLLCHARACTERISTICS_NO_SEH | IMAGE_DLLCHARACTERISTICS_TERMINAL_SERVER_AWARE\"},{\"name\":\"sizeOfStackReserve\",\"type\":\"x\",\"offset\":224,\"value\":1048576},{\"name\":\"sizeOfStackCommit\",\"type\":\"x\",\"offset\":228,\"value\":4096},{\"name\":\"sizeOfHeapReserve\",\"type\":\"x\",\"offset\":232,\"value\":1048576},{\"name\":\"sizeOfHeapCommit\",\"type\":\"x\",\"offset\":236,\"value\":4096},{\"name\":\"loaderFlags\",\"type\":\"x\",\"offset\":240,\"value\":0},{\"name\":\"numberOfRvaAndSizes\",\"type\":\"x\",\"offset\":244,\"value\":16},{\"name\":\"dataDirectory\",\"type\":\"pe_image_data_directory\",\"offset\":248,\"value\":[[\n{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":248,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":252,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":256,\"value\":20208},{\"name\":\"size\",\"type\":\"x\",\"offset\":260,\"value\":75},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":264,\"value\":32768},{\"name\":\"size\",\"type\":\"x\",\"offset\":268,\"value\":11840},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":272,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":276,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":280,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":284,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":288,\"value\":49152},{\"name\":\"size\",\"type\":\"x\",\"offset\":292,\"value\":12},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":296,\"value\":24576},{\"name\":\"size\",\"type\":\"x\",\"offset\":300,\"value\":28},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":304,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":308,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":312,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":316,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":320,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":324,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":328,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":332,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":336,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":340,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":344,\"value\":8192},{\"name\":\"size\",\"type\":\"x\",\"offset\":348,\"value\":8},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":352,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":356,\"value\":0},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":360,\"value\":8200},{\"name\":\"size\",\"type\":\"x\",\"offset\":364,\"value\":72},{\"name\":\"virtualAddress\",\"type\":\"x\",\"offset\":368,\"value\":0},{\"name\":\"size\",\"type\":\"x\",\"offset\":372,\"value\":0}]\n]}]}]\n\n",
        "broken": false
    }, {
        "name": "JSON output",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.bits=32", "wx 341289679a020000a00f00002a003000000014426416", "wx 800600000040@0x20", "wx 14000000641620000000@0x30", "pf.troll iw*? integer word (troll)Bah", "pf.plop i?w first (troll)Boh bwa", "pf.gobelin 2ww?x blah meh (plop)Buh foo", "pfj.gobelin", "", ""],
        "expected": "[[{\"index\":0,\"offset\":0},{\"name\":\"blah\",\"type\":\"w\",\"offset\":0,\"value\":4660},{\"name\":\"meh\",\"type\":\"w\",\"offset\":2,\"value\":26505},{\"name\":\"Buh\",\"type\":\"plop\",\"offset\":4,\"value\":[{\"name\":\"first\",\"type\":\"i\",\"offset\":4,\"value\":666},{\"name\":\"Boh\",\"type\":\"troll\",\"offset\":8,\"value\":[{\"name\":\"integer\",\"type\":\"i\",\"offset\":8,\"value\":4000},{\"name\":\"word\",\"type\":\"w\",\"offset\":12,\"value\":42},{\"name\":\"Bah\",\"type\":\"troll*\",\"offset\":14,\"value\":48},{\"name\":\"integer\",\"type\":\"i\",\"offset\":48,\"value\":20},{\"name\":\"word\",\"type\":\"w\",\"offset\":52,\"value\":5732},{\"name\":\"Bah\",\"type\":\"troll*\",\"offset\":54,\"value\":32},{\"name\":\"integer\",\"type\":\"i\",\"offset\":32,\"value\":1664},{\"name\":\"word\",\"type\":\"w\",\"offset\":36,\"value\":16384},{\"name\":\"Bah\",\"type\":\"troll*\",\"offset\":38,\"value\":\"NULL\"}]},{\"name\":\"bwa\",\"type\":\"w\",\"offset\":18,\"value\":16916}]},{\"name\":\"foo\",\"type\":\"x\",\"offset\":20,\"value\":5732}],[{\"index\":1,\"offset\":24},{\"name\":\"blah\",\"type\":\"w\",\"offset\":24,\"value\":0},{\"name\":\"meh\",\"type\":\"w\",\"offset\":26,\"value\":0},{\"name\":\"Buh\",\"type\":\"plop\",\"offset\":28,\"value\":[{\"name\":\"first\",\"type\":\"i\",\"offset\":28,\"value\":0},{\"name\":\"Boh\",\"type\":\"troll\",\"offset\":32,\"value\":[{\"name\":\"integer\",\"type\":\"i\",\"offset\":32,\"value\":1664},{\"name\":\"word\",\"type\":\"w\",\"offset\":36,\"value\":16384},{\"name\":\"Bah\",\"type\":\"troll*\",\"offset\":38,\"value\":\"NULL\"}]},{\"name\":\"bwa\",\"type\":\"w\",\"offset\":42,\"value\":0}]},{\"name\":\"foo\",\"type\":\"x\",\"offset\":44,\"value\":0}]]\n\n",
        "broken": false
    }, {
        "name": "access specific element through nested struct",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.bits=32", "wx 341289679a020000a00f00002a003000000014426416", "wx 800600000040@0x20", "wx 14000000641620000000@0x30", "pf.troll iw*? integer word (troll)Bah", "pf.plop i?w first (troll)Boh bwa", "pf.gobelin ww?x blah meh (plop)Buh foo", "pf.gobelin.Buh.first", "pf.gobelin.Buh.Boh.word", "", ""],
        "expected": "  Buh : \n                struct\u003cplop\u003e\n       first : 0x00000004 = 666\n  Buh : \n                struct\u003cplop\u003e\n         Boh : \n                      struct\u003ctroll\u003e\n                    word : 0x0000000c = 0x002a\n\n",
        "broken": false
    }, {
        "name": "access specific element in an array",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.bits=32", "wx a00f0000adde @ 0x10", "pf.plop iwqw one two three four", "pf.troll [3]? (plop)str", "pf.troll.str[1]", "pf.troll.str[1].two", "", ""],
        "expected": " str : \n[\n                struct\u003cplop\u003e\n         one : 0x00000010 = 4000\n         two : 0x00000014 = 0xdead\n       three : 0x00000016 = (qword)0x0000000000000000\n        four : 0x0000001e = 0x0000\n]\n str : \n[\n                struct\u003cplop\u003e\n         two : 0x00000014 = 0xdead\n]\n\n",
        "broken": false
    }, {
        "name": "Complex request with specific array element and specific field",
        "file": "bins/pe/ch22.exe",
        "args": "-nn",
        "commands": ["e asm.bits=32", "s 0x80", "pf.pe_dos_header.e_res[2]", "pf.pe_dos_header.e_res2[8]", "", ""],
        "expected": "      e_res : 0x000000a0 = [ 0x3400 ]\n     e_res2 : 0x000000b8 = [ 0x2000 ]\n\n",
        "broken": false
    }, {
        "name": "write specific element through nested struct",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.bits=32", "wx 341289679a020000a00f00002a003000000014426416", "wx 800600000040@0x20", "wx 14000000641620000000@0x30", "pf.troll iw*? integer word (troll)Bah", "pf.plop i?w first (troll)Boh bwa", "pf.gobelin ww?x blah meh (plop)Buh foo", "pf.gobelin.Buh.first=42", ".pf.gobelin.Buh.first=42", "pf.gobelin.Buh.Boh.Bah.Bah.word=0xadde", ".pf.gobelin.Buh.Boh.Bah.Bah.word=0xadde", "pf.gobelin", "", ""],
        "expected": "wv4 42 @ 4\nwv2 0xadde @ 0x00000024\n blah : 0x00000000 = 0x1234\n  meh : 0x00000002 = 0x6789\n  Buh : \n                struct\u003cplop\u003e\n       first : 0x00000004 = 42\n         Boh : \n                      struct\u003ctroll\u003e\n                 integer : 0x00000008 = 4000\n                    word : 0x0000000c = 0x002a\n                     Bah : (*0x30)\n                            struct\u003ctroll\u003e\n                         integer : 0x00000030 = 20\n                            word : 0x00000034 = 0x1664\n                             Bah : (*0x20)\n                                  struct\u003ctroll\u003e\n                                 integer : 0x00000020 = 1664\n                                    word : 0x00000024 = 0xadde\n                                     Bah : (*0x0) NULL\n         bwa : 0x00000012 = 0x4214\n  foo : 0x00000014 = 0x00001664\n",
        "broken": false
    }, {
        "name": "print anonymous nested struct",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.bits=32", "wx 71776572747975696f706173646667686a6b6c7a786376626e6d71776572747975696f706173646667686a6b6c7a786376626e6d", "pf.dsf ii a b", "pf.abc ic...?i a b (pf i?i a (dsf)b c)c d", "pf.def ic...*?i a b (pf i?i a (dsf)b c)c d", "pf.abc", "pf.def", ""],
        "expected": " a : 0x00000000 = 1919252337\n b : 0x00000004 = 't'\n c : \n                struct\u003ci?i a (dsf)b c\u003e\n   a : 0x00000008 = 1935765615\n   b : \n                      struct\u003cdsf\u003e\n     a : 0x0000000c = 1751606884\n     b : 0x00000010 = 2053925738\n   c : 0x00000014 = 1651925880\n d : 0x00000018 = 2003922286\n a : 0x00000000 = 1919252337\n b : 0x00000004 = 't'\n c : (*0x7361706f)\n                struct\u003ci?i a (dsf)b c\u003e\n   a : 0x7361706f = -1\n   b : \n                      struct\u003cdsf\u003e\n     a : 0x73617073 = -1\n     b : 0x73617077 = -1\n   c : 0x7361707b = -1\n d : 0x0000000c = 1751606884\n",
        "broken": false
    }, {
        "name": "pf only one size",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "pf 16 16", "", ""],
        "expected": "Usage: pf [0|cnt][format-string]\n\n",
        "broken": false
    }, {
        "name": "pf refuse space between size and format-string",
        "file": "malloc://1024",
        "args": "",
        "commands": ["", "pf 16 16", "", ""],
        "expected": "Usage: pf [0|cnt][format-string]\n\n",
        "broken": false
    }, {
        "name": "pf field name",
        "file": "malloc://1024",
        "args": "",
        "commands": ["pf 2x x2", "", ""],
        "expected": "0x00000000 [0] {\n   x2 : 0x00000000 = 0x00000000\n}\n0x00000004 [1] {\n   x2 : 0x00000004 = 0x00000000\n}\n\n",
        "broken": false
    }, {
        "name": "pf rop64",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.bits=64", "wx 5558 @ 0x22", "wv8 0x22 @ 0x50", "wv8 0x23 @ 0x58", "pf *D*D @ 0x50", ""],
        "expected": "(*0x22)push rbp\n(*0x23)pop rax\n",
        "broken": false
    }, {
        "name": "pf rop32",
        "file": "malloc://1024",
        "args": "",
        "commands": ["e asm.bits=32", "wx 5558 @ 0x22", "wv4 0x22 @ 0x50", "wv4 0x23 @ 0x54", "pf *D*D @ 0x50", ""],
        "expected": "(*0x22)push ebp\n(*0x23)pop eax\n",
        "broken": false
    }, {
        "name": "pf *z (64bit addr)",
        "file": "-",
        "args": "",
        "commands": ["e io.cache=true", "e asm.bits=64", "wz root @ 0x0000000100000faf", "pf z @ 0x0000000100000faf", "e cfg.bigendian=false", "16wxs cc @ 0x200", "wv8 0x0000000100000faf @ 0x204", "pf *z @ 0x204", "e cfg.bigendian=true", "16wxs cc @ 0x200", "wv8 0x0000000100000faf @ 0x204", "pf *z @ 0x204"],
        "expected": "0x100000faf = root\n(*0x100000faf)0x00000204 = root\n(*0x100000faf)0x00000204 = root\n",
        "broken": false
    }]
}