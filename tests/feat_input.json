{
    "type": "cmd",
    "tests": [
        {
            "name": "newline ?e ",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "",
                "# The test suite is not allowed to interpret the output!",
                "?e ",
                "",
                "",
                ""
            ],
            "expected": "\n\n\n",
            "broken": false
        },
        {
            "name": "comments",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "",
                "# This is a comment.",
                "# This is a comment with a ; in it - and it is still only a comment.",
                "# Other stuff is also ignored: `..` ~ ..",
                "",
                "# But inside a command line only the commands after the # are ignored.",
                "?v $$ # this must beignored ; ?v $$ | ls",
                "",
                ""
            ],
            "expected": "0x0\n\n",
            "broken": false
        },
        {
            "name": "w foo#bar",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "",
                "w foo#bar",
                "psz",
                "",
                ""
            ],
            "expected": "foo#bar\n\n",
            "broken": false
        },
        {
            "name": "\"quoted\"",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "",
                "\"w fuck;you@23\"",
                "psz",
                "",
                ""
            ],
            "expected": "fuck;you@23\n\n",
            "broken": false
        },
        {
            "name": "\"quoted\"@addr",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "",
                "\"w fuck;you@23\"@0x10",
                "psz@0x10",
                "",
                ""
            ],
            "expected": "fuck;you@23\n\n",
            "broken": false
        },
        {
            "name": "\"?e foo\" \"?e bar\"",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "",
                "\"?e foo\";\"?e bar\"",
                "",
                ""
            ],
            "expected": "foo\nbar\n\n",
            "broken": false
        },
        {
            "name": "at3 \"?vi $$\"@3;\"?e bar\"",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "\"?vi $$\"@3;?e bar",
                ""
            ],
            "expected": "3\nbar\n\n",
            "broken": false
        },
        {
            "name": "at3 \"?vi $$\"@3;\"?e bar\"",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "\"?vi $$\"@3;\"?e bar\"",
                ""
            ],
            "expected": "3\nbar\n\n",
            "broken": false
        },
        {
            "name": "\"?v 1\u003e\u003e\u003e2 ror\"",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "\"?v 1\u003e\u003e\u003e2\"",
                ""
            ],
            "expected": "0x4000000000000000\n",
            "broken": false
        },
        {
            "name": "\"?v 0xdeadbeef\u003c\u003c\u003c40 rol\"",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "\"?v 0xdeadbeef\u003c\u003c\u003c40\"",
                ""
            ],
            "expected": "0xadbeef00000000de\n",
            "broken": false
        },
        {
            "name": "?e foo;?e bar",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "",
                "?e foo;?e bar",
                "",
                ""
            ],
            "expected": "foo\nbar\n\n",
            "broken": false
        },
        {
            "name": ";?e bar",
            "file": "malloc://1024",
            "args": "",
            "commands": [
                "",
                ";?e bar",
                "",
                ""
            ],
            "expected": "bar\n\n",
            "broken": false
        },
        {
            "name": "'\u003e' in cmd: agn \"sh-\u003efu\"",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "agn \"sh-\u003efu\"",
                "agg",
                ""
            ],
            "expected": ".--------------------.\n|  sh-\u003efu            |\n`--------------------'\n",
            "broken": false
        },
        {
            "name": "multiple '\u003e' in cmd line: ?e abc \u003e def\u003eghi",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "?e abc \u003e def\u003eghi  # should not hang",
                "\"rm ./def\u003eghi\"",
                "rm ./ghi",
                ""
            ],
            "expected": "\n",
            "broken": false
        },
        {
            "name": "hash+space in quoted string",
            "file": "-",
            "args": "",
            "commands": [
                "",
                "agn \"Process form A# B# in cloud\"",
                "agg",
                ""
            ],
            "expected": ".-------------------------------.\n|  Process form A# B# in cloud  |\n`-------------------------------'\n",
            "broken": false
        },
        {
            "name": "cmd outputting trailing space",
            "file": "-",
            "args": "",
            "commands": [
                " do not convert test to base64",
                "?e aaa",
                "\"?e bbb  \"",
                "?e ccc",
                "\"?e ddd     \"",
                "?e eee",
                "\"?e fff        \""
            ],
            "expected": "aaa\nbbb  \nccc\nddd     \neee\nfff        ",
            "broken": false
        }
    ]
}